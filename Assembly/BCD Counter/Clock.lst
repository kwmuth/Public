0000              1   ; Blinky_Int.asm: blinks LEDR0 of the DE2-8052 each second.
0000              2   ; Also generates a 2kHz signal at P0.0 using timer 0 interrupt.
0000              3   ; Also keeps a BCD counter using timer 2 interrupt.
0000              4   
                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              6   
0000              7   CLK EQU 33333333
0000              8   FREQ_0 EQU 2000
0000              9   FREQ_2 EQU 200000
0000             10   TIMER0_RELOAD EQU 65536-(CLK/(12*2*FREQ_0))
0000             11   TIMER2_RELOAD EQU 65536-(CLK/(12*FREQ_2))
0000             12   
0000             13   org 0000H
0000 0201B6      14            ljmp myprogram
0003             15            
000B             16   org 000BH
000B 0200E1      17            ljmp ISR_timer0
000E             18            
002B             19   org 002BH
002B 020038      20            ljmp ISR_timer2
002E             21   
0030             22   DSEG at 30H
0030             23   BCD_count: ds 3
0033             24   NewTime_count: ds 3
0036             25   AlarmCount: ds 3
0039             26   Cnt_10ms:  ds 1
003A             27   sec              : ds 2
003C             28   hours    : ds 2
003E             29   
0000             30   BSEG 
0000             31   Meridiem:        dbit 1
0001             32   
0001             33   
002E             34   CSEG
002E             35   
002E             36   ; Look-up table for 7-segment displays
002E             37   myLUT:
002E C0F9A4B0    38       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H
     99
0033 9282F880    39       DB 092H, 082H, 0F8H, 080H, 090H
     90
0038             40   
0038             41   ISR_timer2:
0038 C0D0        42            push psw
003A C0E0        43            push acc
003C C082        44            push dpl
003E C083        45            push dph
0040             46            
0040 C2CF        47            clr TF2
0042 B281        48            cpl P0.1
0044             49            
0044 E539        50            mov a, Cnt_10ms
0046 04          51            inc a
0047 F539        52            mov Cnt_10ms, a
0049             53            
0049 753300      54            mov NewTime_count+0,#0
004C 753400      55            mov NewTime_count+1,#0
004F 753512      56            mov NewTime_count+2,#12H
0052             57            
0052 B46450      58            cjne a, #100, do_nothing1
0055             59            
0055 20E803      60            jb SWA.0, M1
0058 30E806      61            jnb SWA.0, Continue
005B             62            
005B 120193      63   M1: lcall ClearDisplay
005E 1200EA      64            lcall SetTime
0061             65            
0061             66   Continue:
0061 753900      67            mov Cnt_10ms, #0
0064 E530        68            mov a, BCD_count+0
0066 2401        69            add a, #1
0068 D4          70            da a
0069 F530        71            mov BCD_count+0, a
006B B4603A      72            cjne A, #60H, Display
006E 020071      73            ljmp Min
0071             74            
0071 753000      75   Min:mov BCD_count+0, #00H
0074 E531        76            mov a, BCD_count+1
0076 2401        77            add a, #1
0078 D4          78            da a
0079 F531        79            mov BCD_count+1, a
007B B4602A      80            cjne A, #60H, Display
007E 020081      81            ljmp Hour
0081             82            
0081 753100      83   Hour:mov BCD_count+1,#00H
0084 E532        84            mov a, BCD_count+2
0086 2401        85            add a, #1
0088 D4          86            da a
0089 F532        87            mov BCD_count+2, a
008B B41211      88            cjne A, #12H, M8
008E             89   CPLMeridiem:
008E B200        90            cpl meridiem
0090 300003      91            jnb meridiem, AM
0093 200006      92            jb meridiem, PM
0096 759108      93   AM: mov HEX0, #08H
0099 0200A8      94            ljmp Display
009C 75910C      95   PM: mov HEX0, #0CH
009F B41306      96   M8:      cjne A,#13H, Display
00A2 753201      97            mov BCD_count+2, #1H
00A5             98            
00A5             99   
00A5            100   do_nothing1:
00A5 0200D8     101            ljmp do_nothing
00A8            102            
00A8            103   Display:
00A8 90002E     104            mov dptr, #myLUT
00AB            105   ; Display Digit 1
00AB E530       106            mov A, BCD_count+0
00AD 540F       107       anl A, #0FH
00AF 93         108       movc A, @A+dptr
00B0 F593       109       mov HEX2, A
00B2            110   ; Display Digit 2
00B2 E530       111       mov A, BCD_count+0
00B4 C4         112       swap A
00B5 540F       113       anl A, #0FH
00B7 93         114       movc A, @A+dptr
00B8 F594       115       mov HEX3, A  
00BA            116   ; Display digit 3
00BA E531       117            mov A, BCD_count+1
00BC 540F       118            anl A, #0FH
00BE 93         119            movc A, @A+dptr
00BF F58E       120            mov HEX4, A     
00C1            121   ;Display digit 4
00C1 E531       122            mov A, BCD_count+1
00C3 C4         123            swap A
00C4 540F       124            anl A, #0FH
00C6 93         125            movc A, @A+dptr
00C7 F58F       126            mov HEX5, A
00C9            127   ;Display digit 5
00C9 E532       128            mov A, BCD_count+2
00CB 540F       129            anl A, #0FH
00CD 93         130            movc A, @A+dptr
00CE F596       131            mov HEX6, A
00D0            132   
00D0            133   ;Display digit 6
00D0 E532       134            mov A, BCD_count+2
00D2 C4         135            swap A
00D3 540F       136            anl A, #0FH
00D5 93         137            movc A, @A+dptr
00D6 F597       138            mov HEX7, A
00D8            139            
00D8            140   do_nothing:
00D8 D083       141            pop dph
00DA D082       142            pop dpl
00DC D0E0       143            pop acc
00DE D0D0       144            pop psw
00E0            145            
00E0 32         146            reti
00E1            147   
00E1            148   ;SetAlarm:
00E1            149   ;        jnb SWA.3, SetAlarm
00E1            150   ;        jb SWA.4, SetAlarmMin
00E1            151   ;        jb SWA.5, SetAlarmHour
00E1            152   ;        lcall MoveToBCD2
00E1            153   ;        ret
00E1            154   
00E1            155   ;SetAlarmMin:
00E1            156   ;        jnb SWA.3, SetAlarm
00E1            157   ;        jnb SWA.4, SetAlarmMin
00E1            158   ;        mov a, AlarmCount+1
00E1            159   ;        add a, #1
00E1            160   ;        da a
00E1            161   ;        cjne a, #60H, M5
00E1            162   ;M4:     mov min, #60H
00E1            163   ;        clr a
00E1            164   ;M5:     mov AlarmCount+1, a
00E1            165   ;        lcall DisplaySetTime2
00E1            166   ;        jb SWA.4, WaitSW4
00E1            167   ;WaitSW4:
00E1            168   ;        jb SWA.4, WaitSW4
00E1            169   ;        sjmp SetAlarm
00E1            170            
00E1            171   
00E1            172   ISR_timer0:
00E1 B280       173            cpl P0.0
00E3 758CFD     174       mov TH0, #high(TIMER0_RELOAD)
00E6 758A4A     175       mov TL0, #low(TIMER0_RELOAD)
00E9 32         176            reti
00EA            177    
00EA            178   SetTime:
00EA 20E90A     179            jb SWA.1, SetTimeMin
00ED 20EA26     180            jb SWA.2, SetTimeHour
00F0 20E8F7     181            jb SWA.0, SetTime
00F3 12014E     182            lcall MoveToBCD                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
00F6 22         183            ret
00F7            184   
00F7            185   SetTimeMin:
00F7 30E8F0     186            jnb SWA.0, SetTime
00FA 30E9FA     187            jnb SWA.1, SetTimeMin
00FD E534       188            mov a, NewTime_count+1
00FF 2401       189            add a, #1
0101 D4         190            da a
0102 B46004     191            cjne a, #60H, M5
0105 757160     192   M4:      mov min, #60H
0108 E4         193            clr a
0109 F534       194   M5:      mov NewTime_count+1, a
010B 120162     195            lcall DisplaySetTime
010E 20E900     196            jb SWA.1, WaitSW1
0111            197   WaitSW1:
0111 20E9FD     198            jb SWA.1, WaitSW1
0114 80D4       199            sjmp SetTime
0116            200            
0116            201   SetTimeHour:
0116 30E8D1     202            jnb SWA.0, SetTime
0119 30EAFA     203            jnb SWA.2, SetTimeHour
011C E535       204            mov a, NewTime_count+2
011E 2401       205            add a, #1
0120 D4         206            da a
0121 B41303     207            cjne a, #13H, M7
0124 7401       208   M6:      mov a, #1H
0126 D4         209            da a
0127 F535       210   M7:      mov NewTime_count+2, a
0129 120162     211            lcall DisplaySetTime
012C 120137     212            lcall AMPM
012F 20EA00     213            jb SWA.2, WaitSW2
0132            214   WaitSW2:
0132 20EAFD     215            jb SWA.2, WaitSW2
0135 80B3       216            sjmp SetTime
0137            217   
0137            218   AMPM:
0137 D53C13     219            djnz hours, return
013A B200       220            cpl meridiem 
013C 300003     221            jnb meridiem, ChangeToAM
013F 200005     222            jb meridiem, ChangeToPM
0142            223   ChangeToAM:
0142 759108     224            mov HEX0, #08H
0145 8003       225            sjmp SetHourVar
0147            226   ChangeToPM:
0147 75910C     227            mov HEX0, #0CH
014A            228   SetHourVar:
014A 753C0C     229            mov hours, #12D
014D            230   return:
014D 22         231            ret     
014E            232   
014E            233   MoveToBCD:
014E 853330     234            mov BCD_count+0, NewTime_count+0
0151 853431     235            mov BCD_count+1, NewTime_count+1
0154 853532     236            mov BCD_count+2, NewTime_count+2
0157 22         237            ret
0158            238            
0158            239   MoveToBCD2:
0158 853630     240            mov BCD_count+0, AlarmCount+0
015B 853731     241            mov BCD_count+1, AlarmCount+1
015E 853832     242            mov BCD_count+2, AlarmCount+2
0161 22         243            ret
0162            244            
0162            245            
0162            246   DisplaySetTime:
0162 90002E     247            mov dptr, #myLUT
0165            248            
0165            249   ; Display Digit 1
0165 E533       250            mov A, NewTime_count+0
0167 540F       251       anl A, #0FH
0169 93         252       movc A, @A+dptr
016A F593       253       mov HEX2, A
016C            254       
016C            255   ; Display Digit 2
016C E533       256       mov A, NewTime_count+0
016E C4         257       swap A
016F 540F       258       anl A, #0FH
0171 93         259       movc A, @A+dptr
0172 F594       260       mov HEX3, A  
0174            261       
0174            262   ; Display digit 3
0174 E534       263            mov A, NewTime_count+1
0176 540F       264            anl A, #0FH
0178 93         265            movc A, @A+dptr
0179 F58E       266            mov HEX4, A
017B            267            
017B            268   ;Display digit 4
017B E534       269            mov A, NewTime_count+1
017D C4         270            swap A
017E 540F       271            anl A, #0FH
0180 93         272            movc A, @A+dptr
0181 F58F       273            mov HEX5, A
0183            274            
0183            275   ;Display digit 5
0183 E535       276            mov A, NewTime_count+2
0185 540F       277            anl A, #0FH
0187 93         278            movc A, @A+dptr
0188 F596       279            mov HEX6, A
018A            280   
018A            281   ;Display digit 6
018A E535       282            mov A, NewTime_count+2
018C C4         283            swap A
018D 540F       284            anl A, #0FH
018F 93         285            movc A, @A+dptr
0190 F597       286            mov HEX7, A
0192 22         287            ret
0193            288   
0193            289   ClearDisplay:
0193 759108     290            mov HEX0, #08H
0196 759340     291       mov HEX2, #40H
0199 759440     292       mov HEX3, #40H
019C 758E40     293       mov HEX4, #40H
019F 758F40     294       mov HEX5, #40H
01A2 7596A4     295       mov HEX6, #0A4H
01A5 7597F9     296       mov HEX7, #0F9H
01A8 22         297       ret
01A9            298       
01A9            299   ;For a 33.33MHz clock, one cycle takes 30ns
01A9            300   WaitHalfSec:
01A9 7A5A       301            mov R2, #90
01AB 79FA       302   L3: mov R1, #250
01AD 78FA       303   L2: mov R0, #250
01AF D8FE       304   L1: djnz R0, L1
01B1 D9FA       305            djnz R1, L2
01B3 DAF6       306            djnz R2, L3
01B5 22         307            ret
01B6            308            
01B6            309   myprogram:
01B6 75817F     310            mov SP, #7FH
01B9 75E800     311            mov LEDRA,#0
01BC 759500     312            mov LEDRB,#0
01BF 759E00     313            mov LEDRC,#0
01C2 75F800     314            mov LEDG,#0
01C5 759A03     315            mov P0MOD, #00000011B ; P0.0, P0.1 are outputs.  P0.1 is used for testing Timer 2!
01C8 D280       316            setb P0.0
01CA            317   
01CA 758901     318       mov TMOD,  #00000001B ; GATE=0, C/T*=0, M1=0, M0=1: 16-bit timer
01CD C28C       319            clr TR0 ; Disable timer 0
01CF C28D       320            clr TF0
01D1 758CFD     321       mov TH0, #high(TIMER0_RELOAD)
01D4 758A4A     322       mov TL0, #low(TIMER0_RELOAD)
01D7 D28C       323       setb TR0 ; Enable timer 0
01D9 D2A9       324       setb ET0 ; Enable timer 0 interrupt
01DB            325       
01DB            326           
01DB 75C800     327       mov T2CON, #00H ; Autoreload is enabled, work as a timer
01DE C2CA       328       clr TR2
01E0 C2CF       329       clr TF2
01E2            330       ; Set up timer 2 to interrupt every 10ms
01E2 75CBFF     331       mov RCAP2H,#high(TIMER2_RELOAD)
01E5 75CAF3     332       mov RCAP2L,#low(TIMER2_RELOAD)
01E8 D2CA       333       setb TR2
01EA D2AD       334       setb ET2
01EC 759108     335       mov HEX0, #08H
01EF            336       
01EF 7412       337       mov a, #12H
01F1 D4         338       da a
01F2            339       
01F2 753000     340       mov BCD_count+0, #0
01F5 753100     341       mov BCD_count+1, #0
01F8 F532       342       mov BCD_count+2, a
01FA C200       343       clr meridiem
01FC 753900     344       mov Cnt_10ms, #0
01FF            345       
01FF 753A3C     346       mov sec, #60
0202 753C0C     347       mov hours, #12
0205            348        
0205 D2AF       349       setb EA  ; Enable all interrupts
0207            350   
0207            351   M0:
0207 B2E8       352            cpl LEDRA.0
0209 1201A9     353            lcall WaitHalfSec
020C 80F9       354            sjmp M0
020E            355   EN
