0000              1   ; clk_v3.asm: Displays seconds, minuts, and hours in HEX2 to HEX7
0000              2   ; We can set the time by flipping SW0 and using KEY.3, KEY.2, KEY.1
0000              3   ; to increment the Hours, Minutes, and Seconds.
0000              4   
                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              6   
0000              7   org 0000H
0000 0201B1       8            ljmp myprogram
0003              9            
000B             10   org 000BH
000B 020019      11            ljmp ISR_timer0
000E             12            
0030             13   DSEG at 30H
0030             14   count10ms: ds 1
0031             15   seconds:   ds 1
0032             16   minutes:   ds 1
0033             17   hours:     ds 1
0034             18   AlarmCount:      ds 3
0037             19   
0000             20   BSEG
0000             21   meridiem:        dbit 1
0001             22   meridiemAlarm: dbit 1
0002             23   
000E             24   CSEG
000E             25   
000E             26   ; Look-up table for 7-segment displays
000E             27   myLUT:
000E C0F9A4B0    28       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H
     99
0013 9282F880    29       DB 092H, 082H, 0F8H, 080H, 090H
     90
0018 FF          30       DB 0FFH ; All segments off
0019             31   
0019             32   XTAL           EQU 33333333
0019             33   FREQ           EQU 100
0019             34   TIMER0_RELOAD  EQU 65538-(XTAL/(12*FREQ))
0019             35   
0019             36   ISR_Timer0:
0019             37            ; Reload the timer
0019 758C93      38       mov TH0, #high(TIMER0_RELOAD)
001C 758A81      39       mov TL0, #low(TIMER0_RELOAD)
001F             40       
001F             41       ; Save used register into the stack
001F C0D0        42       push psw
0021 C0E0        43       push acc
0023 C083        44       push dph
0025 C082        45       push dpl
0027             46       
0027 20E848      47       jb SWA.0, ISR_Timer0_L0 ; Setting up time.  Do not increment anything
002A             48       
002A             49       ; Increment the counter and check if a second has passed
002A 0530        50       inc count10ms
002C E530        51       mov a, count10ms
002E B46441      52       cjne A, #100, ISR_Timer0_L0
0031 753000      53       mov count10ms, #0
0034             54       
0034 1200D4      55            lcall CheckAlarm
0037             56       
0037 E531        57            mov a, seconds
0039 2401        58       add a, #1
003B D4          59       da a
003C F531        60       mov seconds, a
003E B46031      61       cjne A, #60H, ISR_Timer0_L0
0041 753100      62       mov seconds, #0
0044             63   
0044 E532        64       mov a, minutes
0046 2401        65       add a, #1
0048 D4          66       da a
0049 F532        67       mov minutes, a
004B B46024      68       cjne A, #60H, ISR_Timer0_L0
004E 753200      69       mov minutes, #0
0051             70   
0051 E533        71       mov a, hours
0053 2401        72       add a, #1
0055 D4          73       da a
0056 F533        74       mov hours, a
0058 B41211      75       cjne A, #12H, M8
005B             76   CPLMeridiem:
005B B200        77            cpl meridiem
005D 300003      78            jnb meridiem, AM
0060 200006      79            jb meridiem, PM
0063 759108      80   AM:      mov HEX0, #08H
0066 020072      81            ljmp ISR_Timer0_L0
0069 75910C      82   PM: mov HEX0, #0CH
006C B41303      83   M8: cjne A, #13H, ISR_Timer0_L0
006F 753301      84       mov hours, #1
0072             85       
0072             86       
0072             87   ISR_Timer0_L0:
0072 20E944      88            jb SWA.1, do_nothing
0075             89            
0075             90            ; Update the display.  This happens every 10 ms
0075 90000E      91            mov dptr, #myLUT
0078             92   
0078 300003      93            jnb meridiem, InitMeridiemAM
007B 200006      94            jb meridiem, InitMeridiemPM
007E             95   InitMeridiemAM:
007E 759108      96            mov HEX0, #08H
0081 020087      97            ljmp M15
0084             98   InitMeridiemPM:
0084 75910C      99            mov HEX0, #0CH
0087            100   
0087 E531       101   M15:mov a, seconds
0089 540F       102            anl a, #0fH
008B 93         103            movc a, @a+dptr
008C F593       104            mov HEX2, a
008E E531       105            mov a, seconds
0090 C4         106            swap a
0091 540F       107            anl a, #0fH
0093 93         108            movc a, @a+dptr
0094 F594       109            mov HEX3, a
0096            110   
0096 E532       111            mov a, minutes
0098 540F       112            anl a, #0fH
009A 93         113            movc a, @a+dptr
009B F58E       114            mov HEX4, a
009D E532       115            mov a, minutes
009F C4         116            swap a
00A0 540F       117            anl a, #0fH
00A2 93         118            movc a, @a+dptr
00A3 F58F       119            mov HEX5, a
00A5            120   
00A5 E533       121            mov a, hours
00A7 540F       122            anl a, #0fH
00A9 93         123            movc a, @a+dptr
00AA F596       124            mov HEX6, a
00AC E533       125            mov a, hours
00AE 20E402     126            jb acc.4, ISR_Timer0_L1
00B1 74A0       127            mov a, #0A0H
00B3            128   ISR_Timer0_L1:
00B3 C4         129            swap a
00B4 540F       130            anl a, #0fH
00B6 93         131            movc a, @a+dptr
00B7 F597       132            mov HEX7, a
00B9            133            
00B9            134            ; Restore used registers
00B9            135   do_nothing:
00B9 D082       136            pop dpl
00BB D083       137            pop dph
00BD D0E0       138            pop acc
00BF D0D0       139            pop psw    
00C1 32         140            reti
00C2            141   
00C2            142   Init_Timer0:     
00C2 758901     143            mov TMOD,  #00000001B ; GATE=0, C/T*=0, M1=0, M0=1: 16-bit timer
00C5 C28C       144            clr TR0 ; Disable timer 0
00C7 C28D       145            clr TF0
00C9 758C93     146       mov TH0, #high(TIMER0_RELOAD)
00CC 758A81     147       mov TL0, #low(TIMER0_RELOAD)
00CF D28C       148       setb TR0 ; Enable timer 0
00D1 D2A9       149       setb ET0 ; Enable timer 0 interrupt
00D3 22         150       ret
00D4            151   
00D4            152   CheckAlarm:
00D4 E533       153            mov a, hours
00D6 8536F0     154            mov b, AlarmCount+2
00D9 95F0       155            subb a,b
00DB 6001       156            jz CheckMin
00DD            157   ReturnISR:
00DD 22         158            ret
00DE            159   CheckMin:
00DE E532       160            mov a, minutes
00E0 8535F0     161            mov b, AlarmCount+1
00E3 95F0       162            subb a, b
00E5 C3         163            clr c
00E6 6002       164            jz CheckSec
00E8 80F3       165            sjmp ReturnISR
00EA            166   CheckSec:
00EA E531       167            mov a, seconds
00EC 8534F0     168            mov b, AlarmCount+0
00EF 95F0       169            subb a,b 
00F1 C3         170            clr c
00F2 6003       171            jz SetLED
00F4 0200DD     172            ljmp ReturnISR
00F7            173   SetLED:
00F7 D2FB       174            setb LEDG.3
00F9 80E2       175            sjmp ReturnISR
00FB            176   
00FB            177   
00FB            178   DisplayAlarmVal:
00FB 90000E     179            mov dptr, #myLUT        
00FE            180   ; Display Digit 1
00FE E534       181            mov A, AlarmCount+0
0100 540F       182       anl A, #0FH
0102 93         183       movc A, @A+dptr
0103 F593       184       mov HEX2, A   
0105            185   ; Display Digit 2
0105 E534       186       mov A, AlarmCount+0
0107 C4         187       swap A
0108 540F       188       anl A, #0FH
010A 93         189       movc A, @A+dptr
010B F594       190       mov HEX3, A   
010D            191   ; Display digit 3
010D E535       192            mov A, AlarmCount+1
010F 540F       193            anl A, #0FH
0111 93         194            movc A, @A+dptr
0112 F58E       195            mov HEX4, A     
0114            196   ;Display digit 4
0114 E535       197            mov A, AlarmCount+1
0116 C4         198            swap A
0117 540F       199            anl A, #0FH
0119 93         200            movc A, @A+dptr
011A F58F       201            mov HEX5, A     
011C            202   ;Display digit 5
011C E536       203            mov A, AlarmCount+2
011E 540F       204            anl A, #0FH
0120 93         205            movc A, @A+dptr
0121 F596       206            mov HEX6, A
0123            207   ;Display digit 6
0123 E536       208            mov A, AlarmCount+2
0125 C4         209            swap A
0126 540F       210            anl A, #0FH
0128 93         211            movc A, @A+dptr
0129 F597       212            mov HEX7, A
012B 02012E     213            ljmp SetAlarm
012E            214   
012E            215   SetAlarm:
012E 20F913     216            jb KEY.1, M6
0131 30F9FD     217            jnb KEY.1, $
0134 E534       218            mov a, AlarmCount+0
0136 2401       219       add a, #1
0138 D4         220       da a
0139 F534       221       mov AlarmCount+0, a
013B B460BD     222       cjne A, #60H, DisplayAlarmVal
013E 753400     223       mov AlarmCount+0, #0
0141 0200FB     224       ljmp DisplayAlarmVal
0144 20FA13     225   M6:      jb KEY.2, M7
0147 30FAFD     226       jnb KEY.2, $
014A E535       227       mov a, AlarmCount+1
014C 2401       228            add a, #1
014E D4         229            da a
014F F535       230            mov AlarmCount+1, a
0151 B460A7     231       cjne A, #60H, DisplayAlarmVal
0154 753500     232       mov AlarmCount+1, #0
0157 0200FB     233       ljmp DisplayAlarmVal
015A 20FB16     234   M7: jb KEY.3, M9
015D 30FBFD     235            jnb KEY.3, $
0160 E536       236            mov a, AlarmCount+2
0162 2401       237            add a, #1
0164 D4         238            da a
0165 F536       239            mov AlarmCount+2, a
0167 120179     240            lcall AlarmAMPM
016A B4138E     241       cjne A, #13H, DisplayAlarmVal
016D 753601     242       mov AlarmCount+2, #1H
0170 0200FB     243       ljmp DisplayAlarmVal
0173 20E9B8     244   M9:      jb SWA.1, SetAlarm
0176 0201E1     245            ljmp M4
0179            246            
0179            247   AlarmAMPM:
0179 E536       248            mov a, AlarmCount+2
017B B41210     249            cjne a, #12H, returnAlarm
017E B201       250            cpl meridiemAlarm
0180 300103     251            jnb meridiemAlarm, ChangeToAMAlarm
0183 200105     252            jb meridiemAlarm, ChangeToPMAlarm
0186            253   ChangeToAMAlarm:
0186 759108     254            mov HEX0, #08H
0189 8019       255            sjmp return
018B            256   ChangeToPMAlarm:
018B 75910C     257            mov HEX0, #0CH
018E            258   returnAlarm:
018E 22         259            ret
018F            260   
018F            261   AMPM:
018F E533       262            mov a, hours
0191 B41210     263            cjne a, #12H, return
0194 B200       264            cpl meridiem
0196 300003     265            jnb meridiem, ChangeToAM
0199 200005     266            jb meridiem, ChangeToPM
019C            267   ChangeToAM:
019C 759108     268            mov HEX0, #08H
019F 8003       269            sjmp return
01A1            270   ChangeToPM:
01A1 75910C     271            mov HEX0, #0CH
01A4            272   return:
01A4 22         273            ret
01A5            274   
01A5            275   SetAlarm1:
01A5 753400     276            mov AlarmCount+0, #00H
01A8 753500     277            mov AlarmCount+1, #00H
01AB 753612     278            mov AlarmCount+2, #12H
01AE 02012E     279            ljmp SetAlarm
01B1            280            
01B1            281   myprogram:
01B1 75817F     282            mov SP, #7FH
01B4 75E800     283            mov LEDRA,#0
01B7 759500     284            mov LEDRB,#0
01BA 759E00     285            mov LEDRC,#0
01BD 75F800     286            mov LEDG,#0
01C0            287            
01C0 753101     288            mov seconds, #01H
01C3 753200     289            mov minutes, #00H
01C6 753312     290            mov hours, #12H
01C9            291            
01C9 753400     292            mov AlarmCount+0, #00H
01CC 753500     293            mov AlarmCount+1, #00H
01CF 753612     294            mov AlarmCount+2, #12H
01D2            295            
01D2 C200       296            clr meridiem
01D4 C201       297            clr meridiemAlarm
01D6 759108     298            mov HEX0, #08H
01D9            299   
01D9 1200C2     300            lcall Init_Timer0
01DC D2AF       301       setb EA  ; Enable all interrupts
01DE            302   
01DE            303   M0:
01DE 20E9C4     304            jb SWA.1, SetAlarm1
01E1 30E8FA     305   M4:      jnb SWA.0, M0
01E4 20FB13     306            jb KEY.3, M1
01E7 30FBFD     307       jnb KEY.3, $
01EA E533       308       mov a, hours
01EC 2401       309            add a, #1
01EE D4         310            da a
01EF F533       311            mov hours, a
01F1 12018F     312            lcall AMPM
01F4 B41303     313       cjne A, #13H, M1
01F7 753301     314       mov hours, #1
01FA            315   
01FA            316   M1:      
01FA 20FA10     317            jb KEY.2, M2
01FD 30FAFD     318       jnb KEY.2, $
0200 E532       319       mov a, minutes
0202 2401       320            add a, #1
0204 D4         321            da a
0205 F532       322            mov minutes, a
0207 B46003     323       cjne A, #60H, M2
020A 753201     324       mov minutes, #1
020D            325   
020D            326   M2:      
020D 20F910     327            jb KEY.1, M3
0210 30F9FD     328            jnb KEY.1, $
0213 E531       329            mov a, seconds
0215 2401       330            add a, #1
0217 D4         331            da a
0218 F531       332            mov seconds, a
021A B46003     333       cjne A, #60H, M3
021D 753101     334       mov seconds, #1
0220            335   
0220            336   M3:      
0220 0201DE     337            ljmp M0
0223            338   END
