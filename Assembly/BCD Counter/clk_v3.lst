0000              1   ; clk_v3.asm: Displays seconds, minuts, and hours in HEX2 to HEX7
0000              2   ; We can set the time by flipping SW0 and using KEY.3, KEY.2, KEY.1
0000              3   ; to increment the Hours, Minutes, and Seconds.
0000              4   
                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              6   
0000              7   org 0000H
0000 0201BF       8            ljmp myprogram
0003              9            
000B             10   org 000BH
000B 020019      11            ljmp ISR_timer0
000E             12            
0030             13   DSEG at 30H
0030             14   count10ms: ds 1
0031             15   seconds:   ds 1
0032             16   minutes:   ds 1
0033             17   hours:     ds 1
0034             18   AlarmCount:      ds 3
0037             19   
0000             20   BSEG
0000             21   meridiem:        dbit 1
0001             22   meridiemAlarm: dbit 1
0002             23   
000E             24   CSEG
000E             25   
000E             26   ; Look-up table for 7-segment displays
000E             27   myLUT:
000E C0F9A4B0    28       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H
     99
0013 9282F880    29       DB 092H, 082H, 0F8H, 080H, 090H
     90
0018 FF          30       DB 0FFH ; All segments off
0019             31   
0019             32   XTAL           EQU 33333333
0019             33   FREQ           EQU 100
0019             34   TIMER0_RELOAD  EQU 65538-(XTAL/(12*FREQ))
0019             35   
0019             36   ISR_Timer0:
0019             37            ; Reload the timer
0019 758C93      38       mov TH0, #high(TIMER0_RELOAD)
001C 758A81      39       mov TL0, #low(TIMER0_RELOAD)
001F             40       
001F             41       ; Save used register into the stack
001F C0D0        42       push psw
0021 C0E0        43       push acc
0023 C083        44       push dph
0025 C082        45       push dpl
0027             46       
0027 20E848      47       jb SWA.0, ISR_Timer0_L0 ; Setting up time.  Do not increment anything
002A             48       
002A             49       ; Increment the counter and check if a second has passed
002A 0530        50       inc count10ms
002C E530        51       mov a, count10ms
002E B46441      52       cjne A, #100, ISR_Timer0_L0
0031 753000      53       mov count10ms, #0
0034             54       
0034 1200D4      55            lcall CheckAlarm
0037             56       
0037 E531        57            mov a, seconds
0039 2401        58       add a, #1
003B D4          59       da a
003C F531        60       mov seconds, a
003E B46031      61       cjne A, #60H, ISR_Timer0_L0
0041 753100      62       mov seconds, #0
0044             63   
0044 E532        64       mov a, minutes
0046 2401        65       add a, #1
0048 D4          66       da a
0049 F532        67       mov minutes, a
004B B46024      68       cjne A, #60H, ISR_Timer0_L0
004E 753200      69       mov minutes, #0
0051             70   
0051 E533        71       mov a, hours
0053 2401        72       add a, #1
0055 D4          73       da a
0056 F533        74       mov hours, a
0058 B41211      75       cjne A, #12H, M8
005B             76   CPLMeridiem:
005B B200        77            cpl meridiem
005D 300003      78            jnb meridiem, AM
0060 200006      79            jb meridiem, PM
0063 759108      80   AM:      mov HEX0, #08H
0066 020072      81            ljmp ISR_Timer0_L0
0069 75910C      82   PM: mov HEX0, #0CH
006C B41303      83   M8: cjne A, #13H, ISR_Timer0_L0
006F 753301      84       mov hours, #1
0072             85       
0072             86       
0072             87   ISR_Timer0_L0:
0072 20E944      88            jb SWA.1, do_nothing
0075             89            
0075             90            ; Update the display.  This happens every 10 ms
0075 90000E      91            mov dptr, #myLUT
0078             92   
0078 300003      93            jnb meridiem, InitMeridiemAM
007B 200006      94            jb meridiem, InitMeridiemPM
007E             95   InitMeridiemAM:
007E 759108      96            mov HEX0, #08H
0081 020087      97            ljmp M15
0084             98   InitMeridiemPM:
0084 75910C      99            mov HEX0, #0CH
0087            100   
0087 E531       101   M15:mov a, seconds
0089 540F       102            anl a, #0fH
008B 93         103            movc a, @a+dptr
008C F593       104            mov HEX2, a
008E E531       105            mov a, seconds
0090 C4         106            swap a
0091 540F       107            anl a, #0fH
0093 93         108            movc a, @a+dptr
0094 F594       109            mov HEX3, a
0096            110   
0096 E532       111            mov a, minutes
0098 540F       112            anl a, #0fH
009A 93         113            movc a, @a+dptr
009B F58E       114            mov HEX4, a
009D E532       115            mov a, minutes
009F C4         116            swap a
00A0 540F       117            anl a, #0fH
00A2 93         118            movc a, @a+dptr
00A3 F58F       119            mov HEX5, a
00A5            120   
00A5 E533       121            mov a, hours
00A7 540F       122            anl a, #0fH
00A9 93         123            movc a, @a+dptr
00AA F596       124            mov HEX6, a
00AC E533       125            mov a, hours
00AE 20E402     126            jb acc.4, ISR_Timer0_L1
00B1 74A0       127            mov a, #0A0H
00B3            128   ISR_Timer0_L1:
00B3 C4         129            swap a
00B4 540F       130            anl a, #0fH
00B6 93         131            movc a, @a+dptr
00B7 F597       132            mov HEX7, a
00B9            133            
00B9            134            ; Restore used registers
00B9            135   do_nothing:
00B9 D082       136            pop dpl
00BB D083       137            pop dph
00BD D0E0       138            pop acc
00BF D0D0       139            pop psw    
00C1 32         140            reti
00C2            141   
00C2            142   Init_Timer0:     
00C2 758901     143            mov TMOD,  #00000001B ; GATE=0, C/T*=0, M1=0, M0=1: 16-bit timer
00C5 C28C       144            clr TR0 ; Disable timer 0
00C7 C28D       145            clr TF0
00C9 758C93     146       mov TH0, #high(TIMER0_RELOAD)
00CC 758A81     147       mov TL0, #low(TIMER0_RELOAD)
00CF D28C       148       setb TR0 ; Enable timer 0
00D1 D2A9       149       setb ET0 ; Enable timer 0 interrupt
00D3 22         150       ret
00D4            151   
00D4            152   CheckAlarm:
00D4 E533       153            mov a, hours
00D6 8536F0     154            mov b, AlarmCount+2
00D9 95F0       155            subb a,b
00DB 6002       156            jz CheckMin
00DD 8029       157            sjmp ReturnISR
00DF            158   CheckMin:
00DF E532       159            mov a, minutes
00E1 8535F0     160            mov b, AlarmCount+1
00E4 95F0       161            subb a, b
00E6 C3         162            clr c
00E7 6002       163            jz CheckSec
00E9 801D       164            sjmp ReturnISR
00EB            165   CheckSec:
00EB E531       166            mov a, seconds
00ED 8534F0     167            mov b, AlarmCount+0
00F0 95F0       168            subb a,b 
00F2 C3         169            clr c
00F3 6002       170            jz CheckAMPM
00F5 8011       171            sjmp ReturnISR
00F7            172   CheckAMPM:
00F7 200002     173            jb meridiem, K1
00FA 8005       174            sjmp K2
00FC 200107     175   K1:      jb meridiemAlarm, SetLED
00FF 8007       176            sjmp ReturnISR
0101 300102     177   K2: jnb meridiemAlarm, SetLED
0104 8002       178            sjmp ReturnISR
0106            179   SetLED:
0106 D2FB       180            setb LEDG.3
0108            181   ReturnISR:
0108 22         182            ret
0109            183   
0109            184   DisplayAlarmVal:
0109 90000E     185            mov dptr, #myLUT        
010C            186   ; Display Digit 1
010C E534       187            mov A, AlarmCount+0
010E 540F       188       anl A, #0FH
0110 93         189       movc A, @A+dptr
0111 F593       190       mov HEX2, A   
0113            191   ; Display Digit 2
0113 E534       192       mov A, AlarmCount+0
0115 C4         193       swap A
0116 540F       194       anl A, #0FH
0118 93         195       movc A, @A+dptr
0119 F594       196       mov HEX3, A   
011B            197   ; Display digit 3
011B E535       198            mov A, AlarmCount+1
011D 540F       199            anl A, #0FH
011F 93         200            movc A, @A+dptr
0120 F58E       201            mov HEX4, A     
0122            202   ;Display digit 4
0122 E535       203            mov A, AlarmCount+1
0124 C4         204            swap A
0125 540F       205            anl A, #0FH
0127 93         206            movc A, @A+dptr
0128 F58F       207            mov HEX5, A     
012A            208   ;Display digit 5
012A E536       209            mov A, AlarmCount+2
012C 540F       210            anl A, #0FH
012E 93         211            movc A, @A+dptr
012F F596       212            mov HEX6, A
0131            213   ;Display digit 6
0131 E536       214            mov A, AlarmCount+2
0133 C4         215            swap A
0134 540F       216            anl A, #0FH
0136 93         217            movc A, @A+dptr
0137 F597       218            mov HEX7, A
0139 02013C     219            ljmp SetAlarm
013C            220   
013C            221   SetAlarm:
013C 20F913     222            jb KEY.1, M6
013F 30F9FD     223            jnb KEY.1, $
0142 E534       224            mov a, AlarmCount+0
0144 2401       225       add a, #1
0146 D4         226       da a
0147 F534       227       mov AlarmCount+0, a
0149 B460BD     228       cjne A, #60H, DisplayAlarmVal
014C 753400     229       mov AlarmCount+0, #0
014F 020109     230       ljmp DisplayAlarmVal
0152 20FA13     231   M6:      jb KEY.2, M7
0155 30FAFD     232       jnb KEY.2, $
0158 E535       233       mov a, AlarmCount+1
015A 2401       234            add a, #1
015C D4         235            da a
015D F535       236            mov AlarmCount+1, a
015F B460A7     237       cjne A, #60H, DisplayAlarmVal
0162 753500     238       mov AlarmCount+1, #0
0165 020109     239       ljmp DisplayAlarmVal
0168 20FB16     240   M7: jb KEY.3, M9
016B 30FBFD     241            jnb KEY.3, $
016E E536       242            mov a, AlarmCount+2
0170 2401       243            add a, #1
0172 D4         244            da a
0173 F536       245            mov AlarmCount+2, a
0175 120187     246            lcall AlarmAMPM
0178 B4138E     247       cjne A, #13H, DisplayAlarmVal
017B 753601     248       mov AlarmCount+2, #1H
017E 020109     249       ljmp DisplayAlarmVal
0181 20E9B8     250   M9:      jb SWA.1, SetAlarm
0184 0201EF     251            ljmp M4
0187            252            
0187            253   AlarmAMPM:
0187 E536       254            mov a, AlarmCount+2
0189 B41210     255            cjne a, #12H, returnAlarm
018C B201       256            cpl meridiemAlarm
018E 300103     257            jnb meridiemAlarm, ChangeToAMAlarm
0191 200105     258            jb meridiemAlarm, ChangeToPMAlarm
0194            259   ChangeToAMAlarm:
0194 759108     260            mov HEX0, #08H
0197 8019       261            sjmp return
0199            262   ChangeToPMAlarm:
0199 75910C     263            mov HEX0, #0CH
019C            264   returnAlarm:
019C 22         265            ret
019D            266   
019D            267   AMPM:
019D E533       268            mov a, hours
019F B41210     269            cjne a, #12H, return
01A2 B200       270            cpl meridiem
01A4 300003     271            jnb meridiem, ChangeToAM
01A7 200005     272            jb meridiem, ChangeToPM
01AA            273   ChangeToAM:
01AA 759108     274            mov HEX0, #08H
01AD 8003       275            sjmp return
01AF            276   ChangeToPM:
01AF 75910C     277            mov HEX0, #0CH
01B2            278   return:
01B2 22         279            ret
01B3            280   
01B3            281   SetAlarm1:
01B3 753400     282            mov AlarmCount+0, #00H
01B6 753500     283            mov AlarmCount+1, #00H
01B9 753612     284            mov AlarmCount+2, #12H
01BC 02013C     285            ljmp SetAlarm
01BF            286            
01BF            287   myprogram:
01BF 75817F     288            mov SP, #7FH
01C2 75E800     289            mov LEDRA,#0
01C5 759500     290            mov LEDRB,#0
01C8 759E00     291            mov LEDRC,#0
01CB 75F800     292            mov LEDG,#0
01CE            293            
01CE 753101     294            mov seconds, #01H
01D1 753200     295            mov minutes, #00H
01D4 753312     296            mov hours, #12H
01D7            297            
01D7 753400     298            mov AlarmCount+0, #00H
01DA 753500     299            mov AlarmCount+1, #00H
01DD 753612     300            mov AlarmCount+2, #12H
01E0            301            
01E0 C200       302            clr meridiem
01E2 C201       303            clr meridiemAlarm
01E4 759108     304            mov HEX0, #08H
01E7            305   
01E7 1200C2     306            lcall Init_Timer0
01EA D2AF       307       setb EA  ; Enable all interrupts
01EC            308   
01EC            309   M0:
01EC 20E9C4     310            jb SWA.1, SetAlarm1
01EF 30E8FA     311   M4:      jnb SWA.0, M0
01F2 20FB13     312            jb KEY.3, M1
01F5 30FBFD     313       jnb KEY.3, $
01F8 E533       314       mov a, hours
01FA 2401       315            add a, #1
01FC D4         316            da a
01FD F533       317            mov hours, a
01FF 12019D     318            lcall AMPM
0202 B41303     319       cjne A, #13H, M1
0205 753301     320       mov hours, #1
0208            321   
0208            322   M1:      
0208 20FA10     323            jb KEY.2, M2
020B 30FAFD     324       jnb KEY.2, $
020E E532       325       mov a, minutes
0210 2401       326            add a, #1
0212 D4         327            da a
0213 F532       328            mov minutes, a
0215 B46003     329       cjne A, #60H, M2
0218 753201     330       mov minutes, #1
021B            331   
021B            332   M2:      
021B 20F910     333            jb KEY.1, M3
021E 30F9FD     334            jnb KEY.1, $
0221 E531       335            mov a, seconds
0223 2401       336            add a, #1
0225 D4         337            da a
0226 F531       338            mov seconds, a
0228 B46003     339       cjne A, #60H, M3
022B 753101     340       mov seconds, #1
022E            341   
022E            342   M3:      
022E 0201EC     343            ljmp M0
0231            344   END
