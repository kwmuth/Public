0000              1   ; clk_v3.asm: Displays seconds, minuts, and hours in HEX2 to HEX7
0000              2   ; We can set the time by flipping SW0 and using KEY.3, KEY.2, KEY.1
0000              3   ; to increment the Hours, Minutes, and Seconds.
0000              4   
                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              6   
0000              7   org 0000H
0000 0201B9       8            ljmp myprogram
0003              9            
000B             10   org 000BH
000B 020019      11            ljmp ISR_timer0
000E             12            
0030             13   DSEG at 30H
0030             14   count10ms: ds 1
0031             15   seconds:   ds 1
0032             16   minutes:   ds 1
0033             17   hours:     ds 1
0034             18   AlarmCount:      ds 3
0037             19   
0000             20   BSEG
0000             21   meridiem:        dbit 1
0001             22   meridiemAlarm: dbit 1
0002             23   
000E             24   CSEG
000E             25   
000E             26   ; Look-up table for 7-segment displays
000E             27   myLUT:
000E C0F9A4B0    28       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H
     99
0013 9282F880    29       DB 092H, 082H, 0F8H, 080H, 090H
     90
0018 FF          30       DB 0FFH ; All segments off
0019             31   
0019             32   XTAL           EQU 33333333
0019             33   FREQ           EQU 100
0019             34   FREQ_2              EQU 2000
0019             35   TIMER0_RELOAD  EQU 65538-(XTAL/(12*FREQ))
0019             36   TIMER2_RELOAD  EQU 65536-(CLK/(12*2*FREQ_2))
0019             37   
0019             38   ISR_Timer0:
0019             39            ; Reload the timer
0019 758C93      40       mov TH0, #high(TIMER0_RELOAD)
001C 758A81      41       mov TL0, #low(TIMER0_RELOAD)
001F             42       
001F             43       ; Save used register into the stack
001F C0D0        44       push psw
0021 C0E0        45       push acc
0023 C083        46       push dph
0025 C082        47       push dpl
0027             48       
0027 20E84E      49       jb SWA.0, ISR_Timer0_L0 ; Setting up time.  Do not increment anything
002A             50      
002A 20EA03      51            jb SWA.2, Alarm
002D 30EA03      52            jnb SWA.2, Continue
0030             53   
0030             54   Alarm:
0030 1200D1      55       lcall CheckAlarm
0033             56   Continue:    
0033             57       ; Increment the counter and check if a second has passed
0033 0530        58       inc count10ms
0035 E530        59       mov a, count10ms
0037 B4643E      60       cjne A, #100, ISR_Timer0_L0
003A 753000      61       mov count10ms, #0
003D             62       
003D E531        63            mov a, seconds
003F 2401        64       add a, #1
0041 D4          65       da a
0042 F531        66       mov seconds, a
0044 B46031      67       cjne A, #60H, ISR_Timer0_L0
0047 753100      68       mov seconds, #0
004A             69   
004A E532        70       mov a, minutes
004C 2401        71       add a, #1
004E D4          72       da a
004F F532        73       mov minutes, a
0051 B46024      74       cjne A, #60H, ISR_Timer0_L0
0054 753200      75       mov minutes, #0
0057             76   
0057 E533        77       mov a, hours
0059 2401        78       add a, #1
005B D4          79       da a
005C F533        80       mov hours, a
005E B41211      81       cjne A, #12H, M8
0061             82   CPLMeridiem:
0061 B200        83            cpl meridiem
0063 300003      84            jnb meridiem, AM
0066 200006      85            jb meridiem, PM
0069 759108      86   AM:      mov HEX0, #08H
006C 020078      87            ljmp ISR_Timer0_L0
006F 75910C      88   PM: mov HEX0, #0CH
0072 B41303      89   M8: cjne A, #13H, ISR_Timer0_L0
0075 753301      90       mov hours, #1
0078             91       
0078             92       
0078             93   ISR_Timer0_L0:
0078 20E944      94            jb SWA.1, do_nothing
007B             95            
007B             96            ; Update the display.  This happens every 10 ms
007B 90000E      97            mov dptr, #myLUT
007E             98   
007E 300003      99            jnb meridiem, InitMeridiemAM
0081 200006     100            jb meridiem, InitMeridiemPM
0084            101   InitMeridiemAM:
0084 759108     102            mov HEX0, #08H
0087 02008D     103            ljmp M15
008A            104   InitMeridiemPM:
008A 75910C     105            mov HEX0, #0CH
008D            106   
008D E531       107   M15:mov a, seconds
008F 540F       108            anl a, #0fH
0091 93         109            movc a, @a+dptr
0092 F593       110            mov HEX2, a
0094 E531       111            mov a, seconds
0096 C4         112            swap a
0097 540F       113            anl a, #0fH
0099 93         114            movc a, @a+dptr
009A F594       115            mov HEX3, a
009C            116   
009C E532       117            mov a, minutes
009E 540F       118            anl a, #0fH
00A0 93         119            movc a, @a+dptr
00A1 F58E       120            mov HEX4, a
00A3 E532       121            mov a, minutes
00A5 C4         122            swap a
00A6 540F       123            anl a, #0fH
00A8 93         124            movc a, @a+dptr
00A9 F58F       125            mov HEX5, a
00AB            126   
00AB E533       127            mov a, hours
00AD 540F       128            anl a, #0fH
00AF 93         129            movc a, @a+dptr
00B0 F596       130            mov HEX6, a
00B2 E533       131            mov a, hours
00B4 20E402     132            jb acc.4, ISR_Timer0_L1
00B7 74A0       133            mov a, #0A0H
00B9            134   ISR_Timer0_L1:
00B9 C4         135            swap a
00BA 540F       136            anl a, #0fH
00BC 93         137            movc a, @a+dptr
00BD F597       138            mov HEX7, a
00BF            139            
00BF            140            ; Restore used registers
00BF            141   do_nothing:
00BF D082       142            pop dpl
00C1 D083       143            pop dph
00C3 D0E0       144            pop acc
00C5 D0D0       145            pop psw    
00C7 32         146            reti
00C8            147   
00C8            148   ISR_Timer2:
00C8 B280       149       cpl P0.0; Compliments the bit of P0.0
00CA 758C93     150       mov TH0, #high(TIMER0_RELOAD)
00CD 758A81     151       mov TL0, #low(TIMER0_RELOAD)
00D0 32         152       reti
00D1            153           
00D1            154   
00D1            155   
00D1            156   CheckAlarm:
00D1 E533       157            mov a, hours
00D3 8536F0     158            mov b, AlarmCount+2
00D6 95F0       159            subb a,b
00D8 6002       160            jz CheckMin
00DA 8029       161            sjmp ReturnISR
00DC            162   CheckMin:
00DC E532       163            mov a, minutes
00DE 8535F0     164            mov b, AlarmCount+1
00E1 95F0       165            subb a, b
00E3 C3         166            clr c
00E4 6002       167            jz CheckSec
00E6 801D       168            sjmp ReturnISR
00E8            169   CheckSec:
00E8 E531       170            mov a, seconds
00EA 8534F0     171            mov b, AlarmCount+0
00ED 95F0       172            subb a,b 
00EF C3         173            clr c
00F0 6002       174            jz CheckAMPM
00F2 8011       175            sjmp ReturnISR
00F4            176   CheckAMPM:
00F4 200002     177            jb meridiem, K1
00F7 8005       178            sjmp K2
00F9 200107     179   K1:      jb meridiemAlarm, SetLED
00FC 8007       180            sjmp ReturnISR
00FE 300102     181   K2: jnb meridiemAlarm, SetLED
0101 8002       182            sjmp ReturnISR
0103            183   SetLED:
0103 D2FB       184            setb LEDG.3
0105            185   ReturnISR:
0105 22         186            ret
0106            187   
0106            188   DisplayAlarmVal:
0106 90000E     189            mov dptr, #myLUT        
0109            190   ; Display Digit 1
0109 E534       191            mov A, AlarmCount+0
010B 540F       192       anl A, #0FH
010D 93         193       movc A, @A+dptr
010E F593       194       mov HEX2, A   
0110            195   ; Display Digit 2
0110 E534       196       mov A, AlarmCount+0
0112 C4         197       swap A
0113 540F       198       anl A, #0FH
0115 93         199       movc A, @A+dptr
0116 F594       200       mov HEX3, A   
0118            201   ; Display digit 3
0118 E535       202            mov A, AlarmCount+1
011A 540F       203            anl A, #0FH
011C 93         204            movc A, @A+dptr
011D F58E       205            mov HEX4, A     
011F            206   ;Display digit 4
011F E535       207            mov A, AlarmCount+1
0121 C4         208            swap A
0122 540F       209            anl A, #0FH
0124 93         210            movc A, @A+dptr
0125 F58F       211            mov HEX5, A     
0127            212   ;Display digit 5
0127 E536       213            mov A, AlarmCount+2
0129 540F       214            anl A, #0FH
012B 93         215            movc A, @A+dptr
012C F596       216            mov HEX6, A
012E            217   ;Display digit 6
012E E536       218            mov A, AlarmCount+2
0130 20E402     219            jb acc.4, I0
0133 74A0       220            mov a, #0A0H
0135 C4         221   I0:      swap A
0136 540F       222            anl A, #0FH
0138 93         223            movc A, @A+dptr
0139 F597       224            mov HEX7, A
013B 22         225            ret
013C 02013F     226            ljmp SetAlarm
013F            227   
013F            228   SetAlarm:
013F 20F913     229            jb KEY.1, M6
0142 30F9FD     230            jnb KEY.1, $
0145 E534       231            mov a, AlarmCount+0
0147 2401       232       add a, #1
0149 D4         233       da a
014A F534       234       mov AlarmCount+0, a
014C B460B7     235       cjne A, #60H, DisplayAlarmVal
014F 753400     236       mov AlarmCount+0, #0
0152 020106     237       ljmp DisplayAlarmVal
0155 20FA13     238   M6:      jb KEY.2, M7
0158 30FAFD     239       jnb KEY.2, $
015B E535       240       mov a, AlarmCount+1
015D 2401       241            add a, #1
015F D4         242            da a
0160 F535       243            mov AlarmCount+1, a
0162 B460A1     244       cjne A, #60H, DisplayAlarmVal
0165 753500     245       mov AlarmCount+1, #0
0168 020106     246       ljmp DisplayAlarmVal
016B 20FB16     247   M7: jb KEY.3, M9
016E 30FBFD     248            jnb KEY.3, $
0171 E536       249            mov a, AlarmCount+2
0173 2401       250            add a, #1
0175 D4         251            da a
0176 F536       252            mov AlarmCount+2, a
0178 12018A     253            lcall AlarmAMPM
017B B41388     254       cjne A, #13H, DisplayAlarmVal
017E 753601     255       mov AlarmCount+2, #1H
0181 020106     256       ljmp DisplayAlarmVal
0184 20E9B8     257   M9:      jb SWA.1, SetAlarm
0187 0201F7     258            ljmp M4
018A            259            
018A            260   AlarmAMPM:
018A E536       261            mov a, AlarmCount+2
018C B41210     262            cjne a, #12H, returnAlarm
018F B201       263            cpl meridiemAlarm
0191 300103     264            jnb meridiemAlarm, ChangeToAMAlarm
0194 200105     265            jb meridiemAlarm, ChangeToPMAlarm
0197            266   ChangeToAMAlarm:
0197 759108     267            mov HEX0, #08H
019A 8019       268            sjmp return
019C            269   ChangeToPMAlarm:
019C 75910C     270            mov HEX0, #0CH
019F            271   returnAlarm:
019F 22         272            ret
01A0            273   
01A0            274   AMPM:
01A0 E533       275            mov a, hours
01A2 B41210     276            cjne a, #12H, return
01A5 B200       277            cpl meridiem
01A7 300003     278            jnb meridiem, ChangeToAM
01AA 200005     279            jb meridiem, ChangeToPM
01AD            280   ChangeToAM:
01AD 759108     281            mov HEX0, #08H
01B0 8003       282            sjmp return
01B2            283   ChangeToPM:
01B2 75910C     284            mov HEX0, #0CH
01B5            285   return:
01B5 22         286            ret
01B6            287   
01B6            288   SetAlarm1:
01B6 02013F     289            ljmp SetAlarm
01B9            290            
01B9            291   myprogram:
01B9 75817F     292            mov SP, #7FH
01BC 75E800     293            mov LEDRA,#0
01BF 759500     294            mov LEDRB,#0
01C2 759E00     295            mov LEDRC,#0
01C5 75F800     296            mov LEDG,#0
01C8            297                    
01C8 758901     298            mov TMOD,  #00000001B ; GATE=0, C/T*=0, M1=0, M0=1: 16-bit timer
01CB C28C       299            clr TR0 ; Disable timer 0
01CD C28D       300            clr TF0
01CF 758C93     301       mov TH0, #high(TIMER0_RELOAD)
01D2 758A81     302       mov TL0, #low(TIMER0_RELOAD)
01D5 D28C       303       setb TR0 ; Enable timer 0
01D7 D2A9       304       setb ET0 ; Enable timer 0 interrupt
01D9            305       
01D9 D2AF       306       setb EA
01DB            307     
01DB 753159     308            mov seconds, #59H
01DE 753259     309            mov minutes, #59H
01E1 753304     310            mov hours, #4H
01E4            311            
01E4 753400     312            mov AlarmCount+0, #00H
01E7 753500     313            mov AlarmCount+1, #00H
01EA 753612     314            mov AlarmCount+2, #12H
01ED            315            
01ED C200       316            clr meridiem
01EF C201       317            clr meridiemAlarm
01F1 759108     318            mov HEX0, #08H
01F4            319   
01F4            320   M0:
01F4 20E9BF     321            jb SWA.1, SetAlarm1
01F7 30E8FA     322   M4:      jnb SWA.0, M0
01FA 20FB13     323            jb KEY.3, M1
01FD 30FBFD     324       jnb KEY.3, $
0200 E533       325       mov a, hours
0202 2401       326            add a, #1
0204 D4         327            da a
0205 F533       328            mov hours, a
0207 1201A0     329            lcall AMPM
020A B41303     330       cjne A, #13H, M1
020D 753301     331       mov hours, #1
0210            332   
0210            333   M1:      
0210 20FA10     334            jb KEY.2, M2
0213 30FAFD     335       jnb KEY.2, $
0216 E532       336       mov a, minutes
0218 2401       337            add a, #1
021A D4         338            da a
021B F532       339            mov minutes, a
021D B46003     340       cjne A, #60H, M2
0220 753200     341       mov minutes, #0
0223            342   
0223            343   M2:      
0223 20F910     344            jb KEY.1, M3
0226 30F9FD     345            jnb KEY.1, $
0229 E531       346            mov a, seconds
022B 2401       347            add a, #1
022D D4         348            da a
022E F531       349            mov seconds, a
0230 B46003     350       cjne A, #60H, M3
0233 753100     351       mov seconds, #0
0236            352   
0236            353   M3:      
0236 0201F4     354            ljmp M0
0239            355   END
