0000              1    
                 -1   $MODDE2 
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              3   org 0000H 
0000 0204C8       4            ljmp myprogram
                 -1   	$include(LUT.asm)
                372   $LIST
0289            374   
0289              6   
0030              7   DSEG at 30H
0030              8   bcd: ds 3
0033              9   x: ds 2
0035             10   y: ds 2
0037             11   
0289             12   CSEG
0289             13           myLUT:      ;Look-up table for 7-seg displays
0289 C0F9A4B0    14           DB 0C0H, 0F9H, 0A4H, 0B0H, 099H                ; 0 TO 4
     99
028E 9282F880    15           DB 092H, 082H, 0F8H, 080H, 090H                ; 4 TO 9
     90
0293 8883C6A1    16           DB 088H, 083H, 0C6H, 0A1H, 086H, 0FFH ; A TO F
     86FF
0299             17   
0299             18   ; 100 micro-second delay subroutine 
0299             19   delay100us: 
0299 790A        20            mov R1, #10 
029B 786F        21            M0: mov R0, #111 
029D D8FE        22            M1: djnz R0, M1 ; 111*30ns*3=10us 
029F D9FA        23            djnz R1, M0 ; 10*10us=100us, approximately 
02A1 22          24            ret
02A2             25   
02A2             26    
02A2             27   DisplayBin:
02A2 900289      28       mov dptr, #myLUT
02A5             29            ; Display Digit 0
02A5 E8          30            mov A, R0
02A6 540F        31            anl a, #0fh
02A8 93          32       movc A, @A+dptr
02A9 F591        33       mov HEX0, A
02AB             34       ; Display Digit 1
02AB E8          35       mov A, R0
02AC C4          36       swap a
02AD 540F        37       anl a, #0fh
02AF 93          38       movc A, @A+dptr
02B0 F592        39       mov HEX1, A
02B2             40       ; Display Digit 2
02B2 E9          41       mov A, R1
02B3 540F        42       anl a, #0fh
02B5 93          43       movc A, @A+dptr
02B6 F593        44       mov HEX2, A
02B8 22          45       ret
02B9             46   
02B9             47   ReadNumber:
02B9 30E804      48            jnb SWA.0, H1
02BC 8E33        49            mov x+0, R6
02BE 8002        50            sjmp H2
02C0 8F33        51   H1:      mov x+0, R7                ; Reads SW0-7, sets x-low
02C2 753400      52   H2: mov x+1, #0                        ; Sets x-high
02C5 22          53       ret
02C6             54   
02C6             55           
02C6             56   VoltageVal:
02C6 900089      57           mov dptr, #myVoltTable
02C9 753502      58           mov y, #2                        ; Each row has two entries (DW is two bytes)
02CC 120003      59           lcall mul16                ; Multiplies by two
02CF 858336      60           mov y+1, dph                ; Sets high to the first 8-bits of y
02D2 858235      61           mov y+0, dpl                ; Sets low to the last 8-bits of y
02D5 120039      62           lcall add16                        ; 
02D8 853483      63           mov dph, x+1                ; Sets high to the first 8-bits of x
02DB 853382      64           mov dpl, x+0                ; Sets low to the last 8-bits of x
02DE             65   
02DE E4          66           clr a
02DF 93          67           movc a, @a+dptr                ; Selects the first 8-bits to display
02E0 F534        68           mov x+1, a                        ; Sets the first 8-bits of the value
02E2 A3          69           inc dptr                        ; Increments dptr to select second bit
02E3 E4          70           clr a 
02E4 93          71           movc a, @a+dptr                ; Selects the second 8-bits to display
02E5 F533        72           mov x+0, a                        ; Sets the second 8-bits of the value
02E7 22          73           ret
02E8             74   
02E8             75   Display:
02E8 900289      76             mov dptr, #myLUT
02EB             77        ; Display Digit 0
02EB E530        78        mov A, bcd+0
02ED 540F        79        anl a, #0fh
02EF 93          80        movc A, @A+dptr
02F0 F591        81        mov HEX0, A
02F2             82        ; Display Digit 1
02F2 E530        83        mov A, bcd+0
02F4 C4          84        swap a
02F5 540F        85        anl a, #0fh
02F7 93          86        movc A, @A+dptr
02F8 F592        87        mov HEX1, A
02FA             88        ; Display Digit 2
02FA E531        89        mov A, bcd+1
02FC 540F        90        anl a, #0fh
02FE 93          91        movc A, @A+dptr
02FF F593        92        mov HEX2, A
0301             93        ; Display Digit 3
0301 E531        94        mov A, bcd+1
0303 C4          95        swap a
0304 540F        96        anl a, #0fh
0306 93          97        movc A, @A+dptr
0307 F594        98        mov HEX3, A
0309 22          99        ret
030A            100   
030A            101   WriteGreen:
030A 120394     102            lcall ClearScreen
030D 7456       103            mov a, #'V'     
030F 1203CE     104            lcall LCD_put
0312 7441       105            mov a, #'A'     
0314 1203CE     106            lcall LCD_put
0317 744C       107            mov a, #'L'     
0319 1203CE     108            lcall LCD_put
031C 7455       109            mov a, #'U'     
031E 1203CE     110            lcall LCD_put
0321 7445       111            mov a, #'E'     
0323 1203CE     112            lcall LCD_put
0326 7420       113            mov a, #' '     
0328 1203CE     114            lcall LCD_put
032B 744F       115            mov a, #'O'     
032D 1203CE     116            lcall LCD_put
0330 7446       117            mov a, #'F'     
0332 1203CE     118            lcall LCD_put
0335 7420       119            mov a, #' '     
0337 1203CE     120            lcall LCD_put
033A 7447       121            mov a, #'G'     
033C 1203CE     122            lcall LCD_put
033F 7452       123            mov a, #'R'     
0341 1203CE     124            lcall LCD_put
0344 7445       125            mov a, #'E'     
0346 1203CE     126            lcall LCD_put
0349 7445       127            mov a, #'E'     
034B 1203CE     128            lcall LCD_put
034E 744E       129            mov a, #'N'     
0350 1203CE     130            lcall LCD_put
0353 22         131            ret
0354            132            
0354            133   WriteRed:
0354 120394     134            lcall ClearScreen
0357 7456       135            mov a, #'V'     
0359 1203CE     136            lcall LCD_put
035C 7441       137            mov a, #'A'     
035E 1203CE     138            lcall LCD_put
0361 744C       139            mov a, #'L'     
0363 1203CE     140            lcall LCD_put
0366 7455       141            mov a, #'U'     
0368 1203CE     142            lcall LCD_put
036B 7445       143            mov a, #'E'     
036D 1203CE     144            lcall LCD_put
0370 7420       145            mov a, #' '     
0372 1203CE     146            lcall LCD_put
0375 744F       147            mov a, #'O'     
0377 1203CE     148            lcall LCD_put
037A 7446       149            mov a, #'F'     
037C 1203CE     150            lcall LCD_put
037F 7420       151            mov a, #' '     
0381 1203CE     152            lcall LCD_put
0384 7452       153            mov a, #'R'     
0386 1203CE     154            lcall LCD_put
0389 7445       155            mov a, #'E'     
038B 1203CE     156            lcall LCD_put
038E 7444       157            mov a, #'D'
0390 1203CE     158            lcall LCD_put   
0393 22         159            ret
0394            160   
0394            161   
0394            162   ;Clears screen
0394            163   ClearScreen:
0394 7401       164            mov a, #01H 
0396 1203BB     165            lcall LCD_command       
0399 7928       166            mov R1, #40
039B 1203A4     167            lcall Clr_loop
039E 7480       168            mov a, #80H
03A0 1203BB     169            lcall LCD_command
03A3 22         170            ret
03A4            171   
03A4            172   
03A4            173   Clr_loop:
03A4 1203B0     174            lcall Wait40us
03A7 1203B0     175            lcall Wait40us
03AA 1203B0     176            lcall Wait40us
03AD D9F5       177            djnz R1, Clr_loop
03AF 22         178            ret      
03B0            179            
03B0            180   Wait40us:
03B0 7895       181            mov R0, #149
03B2            182   X1: 
03B2 00         183            nop
03B3 00         184            nop
03B4 00         185            nop
03B5 00         186            nop
03B6 00         187            nop
03B7 00         188            nop
03B8 D8F8       189            djnz R0, X1                                                     ;9 machine cycles-> 9*30ns*149=40us
03BA 22         190       ret
03BB            191   
03BB            192   LCD_command:
03BB F5D9       193            mov     LCD_DATA, A
03BD C2DA       194            clr     LCD_RS
03BF 00         195            nop
03C0 00         196            nop
03C1 D2D9       197            setb LCD_EN                                                     ;Enable pulse should be at least 230 ns
03C3 00         198            nop
03C4 00         199            nop
03C5 00         200            nop
03C6 00         201            nop
03C7 00         202            nop
03C8 00         203            nop
03C9 C2D9       204            clr     LCD_EN
03CB 0203B0     205            ljmp Wait40us
03CE            206   
03CE            207   LCD_put:
03CE F5D9       208            mov     LCD_DATA, A
03D0 D2DA       209            setb LCD_RS
03D2 00         210            nop
03D3 00         211            nop
03D4 D2D9       212            setb LCD_EN                                                     ;Enable pulse should be at least 230 ns
03D6 00         213            nop
03D7 00         214            nop
03D8 00         215            nop
03D9 00         216            nop
03DA 00         217            nop
03DB 00         218            nop
03DC C2D9       219            clr     LCD_EN
03DE 0203B0     220            ljmp Wait40us   
03E1            221   
03E1            222   
03E1            223   bin2bcd8:
03E1 75F064     224            mov b, #100
03E4 84         225            div ab
03E5 F9         226            mov r1, a
03E6 E5F0       227            mov a, b
03E8 75F00A     228            mov b, #10
03EB 84         229            div ab
03EC C4         230            swap a
03ED 45F0       231            orl a, b
03EF F8         232            mov r0, a
03F0 22         233            ret
03F1            234   
03F1            235   SuccessiveApproximation:
03F1 75B000     236            mov P3, #0
03F4 D2A0       237            setb P2.0
03F6            238                    
03F6 D2B7       239            setb P3.7
03F8 120299     240            lcall delay100us
03FB 30A002     241            jnb P2.0, N1
03FE C2B7       242            clr P3.7
0400 D2B6       243   N1:      setb P3.6
0402 120299     244            lcall delay100us
0405 30A002     245            jnb P2.0, N2
0408 C2B6       246            clr P3.6
040A D2B5       247   N2:      setb P3.5
040C 120299     248            lcall delay100us
040F 30A002     249            jnb P2.0, N3
0412 C2B5       250            clr P3.5
0414 D2B4       251   N3:      setb P3.4
0416 120299     252            lcall delay100us
0419 30A002     253            jnb P2.0, N4
041C C2B4       254            clr P3.4
041E D2B3       255   N4:      setb P3.3
0420 120299     256            lcall delay100us
0423 30A002     257            jnb P2.0, N5
0426 C2B3       258            clr P3.3
0428 D2B2       259   N5:      setb P3.2
042A 120299     260            lcall delay100us
042D 30A002     261            jnb P2.0, N6
0430 C2B2       262            clr P3.2
0432 D2B1       263   N6:      setb P3.1
0434 120299     264            lcall delay100us
0437 30A002     265            jnb P2.0, N7
043A C2B1       266            clr P3.1
043C D2B0       267   N7: setb P3.0
043E 120299     268            lcall delay100us
0441 30A002     269            jnb P2.0, N8
0444 C2B0       270            clr P3.0
0446 85B0E8     271   N8:      mov LEDRA, P3
0449 AFB0       272            mov R7, P3
044B 22         273            ret
044C            274   
044C            275   SuccessiveApproximation2:
044C 75B000     276            mov P3, #0
044F D2A2       277            setb P2.2
0451 75F000     278            mov b, #0
0454            279                    
0454 D2B7       280            setb P3.7
0456 120299     281            lcall delay100us
0459 30A202     282            jnb P2.2, L1
045C C2B7       283            clr P3.7
045E D2B6       284   L1:      setb P3.6
0460 120299     285            lcall delay100us
0463 30A202     286            jnb P2.2, L2
0466 C2B6       287            clr P3.6
0468 D2B5       288   L2:      setb P3.5
046A 120299     289            lcall delay100us
046D 30A202     290            jnb P2.2, L3
0470 C2B5       291            clr P3.5
0472 D2B4       292   L3:      setb P3.4
0474 120299     293            lcall delay100us
0477 30A202     294            jnb P2.2, L4
047A C2B4       295            clr P3.4
047C D2B3       296   L4:      setb P3.3
047E 120299     297            lcall delay100us
0481 30A202     298            jnb P2.2, L5
0484 C2B3       299            clr P3.3
0486 D2B2       300   L5:      setb P3.2
0488 120299     301            lcall delay100us
048B 30A202     302            jnb P2.2, L6
048E C2B2       303            clr P3.2
0490 D2B1       304   L6:      setb P3.1
0492 120299     305            lcall delay100us
0495 30A205     306            jnb P2.2, L7
0498 C2B1       307            clr P3.1
049A 120299     308            lcall delay100us
049D D2B0       309   L7: setb P3.0
049F 120299     310            lcall delay100us
04A2 30A202     311            jnb P2.2, L8
04A5 C2B0       312            clr P3.0
04A7 85B0F8     313   L8:      mov LEDG, P3
04AA AEB0       314            mov R6, P3
04AC 22         315            ret
04AD            316   
04AD            317   CheckInputs:
04AD E4         318            clr a
04AE 20E806     319            jb SWA.0,SW0T
04B1            320   SW0F:
04B1 EE         321            mov a, R6
04B2 120354     322            lcall WriteRed
04B5 8004       323            sjmp Cont
04B7            324   SW0T:
04B7 EF         325            mov a, R7
04B8 12030A     326            lcall WriteGreen
04BB            327   Cont:
04BB 1202B9     328            lcall ReadNumber
04BE 1202C6     329            lcall VoltageVal
04C1 12004E     330            lcall hex2bcd
04C4 1202E8     331            lcall display
04C7 22         332            ret
04C8            333   
04C8            334   myprogram: 
04C8 75817F     335            mov SP, #7FH ; Set the stack pointer 
04CB 75E800     336            mov LEDRA, #0 ; Turn off all LEDs 
04CE 759500     337            mov LEDRB, #0 
04D1 759E00     338            mov LEDRC, #0 
04D4 75F800     339            mov LEDG, #0 
04D7 759DFF     340            mov P3MOD, #11111111B ; Configure P3.0 to P3.7 as outputs 
04DA 759C00     341            mov P2MOD, #00000000B
04DD            342    
04DD D2DB       343            setb LCD_ON
04DF C2D9       344       clr LCD_EN                                                           ;Default state of enable must be zero
04E1 1203B0     345       lcall Wait40us
04E4            346       
04E4 75DAFF     347       mov LCD_MOD, #0xff                                           ;Use LCD_DATA as output port
04E7 C2D8       348       clr LCD_RW                                                           ;Only writing to the LCD in this code.
04E9            349            
04E9 740C       350            mov a, #0ch                                                     ;Display on command
04EB 1203BB     351            lcall LCD_command
04EE 7438       352            mov a, #38H                                                     ;8-bits interface, 2 lines, 5x7 characters
04F0 1203BB     353            lcall LCD_command
04F3            354     
04F3            355   Loop: 
04F3 1203F1     356    lcall SuccessiveApproximation 
04F6 12044C     357    lcall SuccessiveApproximation2
04F9 120299     358    lcall delay100us
04FC 1204AD     359    lcall CheckInputs
04FF 80F2       360    sjmp Loop 
0501            361    EN
