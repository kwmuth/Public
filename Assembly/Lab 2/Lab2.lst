0000              1   ; dac.asm: uses a R-2R ladder DAC to generate a ramp 
                 -1   $MODDE2 
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              3   org 0000H 
0000 0204AB       4            ljmp myprogram
                 -1   	$include(LUT.asm)
                372   $LIST
0289            374   
0289              6   
0030              7   DSEG at 30H
0030              8   bcd: ds 3
0033              9   x: ds 2
0035             10   y: ds 2
0037             11   
0289             12   CSEG
0289             13           myLUT:        ; Look-up table for 7-seg displays
0289 C0F9A4B0    14           DB 0C0H, 0F9H, 0A4H, 0B0H, 099H                ; 0 TO 4
     99
028E 9282F880    15           DB 092H, 082H, 0F8H, 080H, 090H                ; 4 TO 9
     90
0293 8883C6A1    16           DB 088H, 083H, 0C6H, 0A1H, 086H, 0FFH ; A TO F
     86FF
0299             17   
0299             18   ; 100 micro-second delay subroutine 
0299             19   delay100us: 
0299 790A        20            mov R1, #10 
029B 786F        21            M0: mov R0, #111 
029D D8FE        22            M1: djnz R0, M1 ; 111*30ns*3=10us 
029F D9FA        23            djnz R1, M0 ; 10*10us=100us, approximately 
02A1 22          24            ret
02A2             25   
02A2             26    
02A2             27   DisplayBin:
02A2 900289      28        mov dptr, #myLUT
02A5             29        ; Display Digit 0
02A5 E8          30        mov A, R0
02A6 540F        31           anl a, #0fh
02A8 93          32           movc A, @A+dptr
02A9 F591        33           mov HEX0, A
02AB             34           ; Display Digit 1
02AB E8          35           mov A, R0
02AC C4          36           swap a
02AD 540F        37           anl a, #0fh
02AF 93          38           movc A, @A+dptr
02B0 F592        39           mov HEX1, A
02B2             40           ; Display Digit 2
02B2 E9          41           mov A, R1
02B3 540F        42           anl a, #0fh
02B5 93          43           movc A, @A+dptr
02B6 F593        44           mov HEX2, A
02B8 22          45           ret
02B9             46           
02B9             47   ;VoltageVal:
02B9 900089      48           mov dptr, #myVoltTable
02BC 753502      49           mov y, #2                        ; Each row has two entries (DW is two bytes)
02BF 120003      50           lcall mul16                ; Multiplies by two
02C2 858336      51           mov y+1, dph                ; Sets high to the first 8-bits of y
02C5 858235      52           mov y+0, dpl                ; Sets low to the last 8-bits of y
02C8 120039      53           lcall add16                        ; 
02CB 8883        54           mov dph, R0                ; Sets high to the first 8-bits of x
02CD 8982        55           mov dpl, R1                ; Sets low to the last 8-bits of x
02CF             56   
02CF E4          57           clr a
02D0 93          58           movc a, @a+dptr                ; Selects the first 8-bits to display
02D1 F9          59           mov R1, a                        ; Sets the first 8-bits of the value
02D2 A3          60           inc dptr                        ; Increments dptr to select second bit
02D3 E4          61           clr a 
02D4 93          62           movc a, @a+dptr                ; Selects the second 8-bits to display
02D5 F8          63           mov R0, a                        ; Sets the second 8-bits of the value
02D6 12004E      64           lcall hex2bcd
02D9             65    ;       lcall Display
02D9 22          66           ret
02DA             67   
02DA             68   ;Display:
02DA 900289      69                    mov dptr, #myLUT
02DD             70            ; Display Digit 0
02DD E530        71            mov A, bcd+0
02DF 540F        72           anl a, #0fh
02E1 93          73           movc A, @A+dptr
02E2 F591        74           mov HEX0, A
02E4             75           ; Display Digit 1
02E4 E530        76           mov A, bcd+0
02E6 C4          77           swap a
02E7 540F        78           anl a, #0fh
02E9 93          79           movc A, @A+dptr
02EA F592        80           mov HEX1, A
02EC             81           ; Display Digit 2
02EC E531        82           mov A, bcd+1
02EE 540F        83           anl a, #0fh
02F0 93          84           movc A, @A+dptr
02F1 F593        85           mov HEX2, A
02F3             86           
02F3             87   
02F3             88   WriteGreen:
02F3 12037D      89            lcall ClearScreen
02F6 7456        90            mov a, #'V'     
02F8 1203B7      91            lcall LCD_put
02FB 7441        92            mov a, #'A'     
02FD 1203B7      93            lcall LCD_put
0300 744C        94            mov a, #'L'     
0302 1203B7      95            lcall LCD_put
0305 7455        96            mov a, #'U'     
0307 1203B7      97            lcall LCD_put
030A 7445        98            mov a, #'E'     
030C 1203B7      99            lcall LCD_put
030F 7420       100            mov a, #' '     
0311 1203B7     101            lcall LCD_put
0314 744F       102            mov a, #'O'     
0316 1203B7     103            lcall LCD_put
0319 7446       104            mov a, #'F'     
031B 1203B7     105            lcall LCD_put
031E 7420       106            mov a, #' '     
0320 1203B7     107            lcall LCD_put
0323 7447       108            mov a, #'G'     
0325 1203B7     109            lcall LCD_put
0328 7452       110            mov a, #'R'     
032A 1203B7     111            lcall LCD_put
032D 7445       112            mov a, #'E'     
032F 1203B7     113            lcall LCD_put
0332 7445       114            mov a, #'E'     
0334 1203B7     115            lcall LCD_put
0337 744E       116            mov a, #'N'     
0339 1203B7     117            lcall LCD_put
033C            118   
033C 22         119            ret
033D            120            
033D            121   WriteRed:
033D 12037D     122            lcall ClearScreen
0340 7456       123            mov a, #'V'     
0342 1203B7     124            lcall LCD_put
0345 7441       125            mov a, #'A'     
0347 1203B7     126            lcall LCD_put
034A 744C       127            mov a, #'L'     
034C 1203B7     128            lcall LCD_put
034F 7455       129            mov a, #'U'     
0351 1203B7     130            lcall LCD_put
0354 7445       131            mov a, #'E'     
0356 1203B7     132            lcall LCD_put
0359 7420       133            mov a, #' '     
035B 1203B7     134            lcall LCD_put
035E 744F       135            mov a, #'O'     
0360 1203B7     136            lcall LCD_put
0363 7446       137            mov a, #'F'     
0365 1203B7     138            lcall LCD_put
0368 7420       139            mov a, #' '     
036A 1203B7     140            lcall LCD_put
036D 7452       141            mov a, #'R'     
036F 1203B7     142            lcall LCD_put
0372 7445       143            mov a, #'E'     
0374 1203B7     144            lcall LCD_put
0377 7444       145            mov a, #'D'
0379 1203B7     146            lcall LCD_put   
037C 22         147            ret
037D            148   
037D            149   
037D            150   ;Clears screen
037D            151   ClearScreen:
037D 7401       152            mov a, #01H 
037F 1203A4     153            lcall LCD_command       
0382 7928       154            mov R1, #40
0384 12038D     155            lcall Clr_loop
0387 7480       156            mov a, #80H
0389 1203A4     157            lcall LCD_command
038C 22         158            ret
038D            159   
038D            160   
038D            161   Clr_loop:
038D 120399     162            lcall Wait40us
0390 120399     163            lcall Wait40us
0393 120399     164            lcall Wait40us
0396 D9F5       165            djnz R1, Clr_loop
0398 22         166            ret      
0399            167            
0399            168   Wait40us:
0399 7895       169            mov R0, #149
039B            170   X1: 
039B 00         171            nop
039C 00         172            nop
039D 00         173            nop
039E 00         174            nop
039F 00         175            nop
03A0 00         176            nop
03A1 D8F8       177            djnz R0, X1                                                     ;9 machine cycles-> 9*30ns*149=40us
03A3 22         178       ret
03A4            179   
03A4            180   LCD_command:
03A4 F5D9       181            mov     LCD_DATA, A
03A6 C2DA       182            clr     LCD_RS
03A8 00         183            nop
03A9 00         184            nop
03AA D2D9       185            setb LCD_EN                                                     ;Enable pulse should be at least 230 ns
03AC 00         186            nop
03AD 00         187            nop
03AE 00         188            nop
03AF 00         189            nop
03B0 00         190            nop
03B1 00         191            nop
03B2 C2D9       192            clr     LCD_EN
03B4 020399     193            ljmp Wait40us
03B7            194   
03B7            195   LCD_put:
03B7 F5D9       196            mov     LCD_DATA, A
03B9 D2DA       197            setb LCD_RS
03BB 00         198            nop
03BC 00         199            nop
03BD D2D9       200            setb LCD_EN                                                     ;Enable pulse should be at least 230 ns
03BF 00         201            nop
03C0 00         202            nop
03C1 00         203            nop
03C2 00         204            nop
03C3 00         205            nop
03C4 00         206            nop
03C5 C2D9       207            clr     LCD_EN
03C7 020399     208            ljmp Wait40us   
03CA            209   
03CA            210   
03CA            211   bin2bcd8:
03CA 75F064     212            mov b, #100
03CD 84         213            div ab
03CE F9         214            mov r1, a
03CF E5F0       215            mov a, b
03D1 75F00A     216            mov b, #10
03D4 84         217            div ab
03D5 C4         218            swap a
03D6 45F0       219            orl a, b
03D8 F8         220            mov r0, a
03D9 22         221            ret
03DA            222   
03DA            223   SuccessiveApproximation:
03DA 75B000     224            mov P3, #0
03DD D2A0       225            setb P2.0
03DF            226                    
03DF D2B7       227            setb P3.7
03E1 120299     228            lcall delay100us
03E4 30A002     229            jnb P2.0, N1
03E7 C2B7       230            clr P3.7
03E9 D2B6       231   N1:      setb P3.6
03EB 120299     232            lcall delay100us
03EE 30A002     233            jnb P2.0, N2
03F1 C2B6       234            clr P3.6
03F3 D2B5       235   N2:      setb P3.5
03F5 120299     236            lcall delay100us
03F8 30A002     237            jnb P2.0, N3
03FB C2B5       238            clr P3.5
03FD D2B4       239   N3:      setb P3.4
03FF 120299     240            lcall delay100us
0402 30A002     241            jnb P2.0, N4
0405 C2B4       242            clr P3.4
0407 D2B3       243   N4:      setb P3.3
0409 120299     244            lcall delay100us
040C 30A002     245            jnb P2.0, N5
040F C2B3       246            clr P3.3
0411 D2B2       247   N5:      setb P3.2
0413 120299     248            lcall delay100us
0416 30A002     249            jnb P2.0, N6
0419 C2B2       250            clr P3.2
041B D2B1       251   N6:      setb P3.1
041D 120299     252            lcall delay100us
0420 30A002     253            jnb P2.0, N7
0423 C2B1       254            clr P3.1
0425 D2B0       255   N7: setb P3.0
0427 120299     256            lcall delay100us
042A 30A002     257            jnb P2.0, N8
042D C2B0       258            clr P3.0
042F 85B0E8     259   N8:      mov LEDRA, P3
0432 AFB0       260            mov R7, P3
0434 22         261            ret
0435            262   
0435            263   SuccessiveApproximation2:
0435 75B000     264            mov P3, #0
0438 D2A2       265            setb P2.2
043A 75F000     266            mov b, #0
043D            267                    
043D D2B7       268            setb P3.7
043F 120299     269            lcall delay100us
0442 30A202     270            jnb P2.2, L1
0445 C2B7       271            clr P3.7
0447 D2B6       272   L1:      setb P3.6
0449 120299     273            lcall delay100us
044C 30A202     274            jnb P2.2, L2
044F C2B6       275            clr P3.6
0451 D2B5       276   L2:      setb P3.5
0453 120299     277            lcall delay100us
0456 30A202     278            jnb P2.2, L3
0459 C2B5       279            clr P3.5
045B D2B4       280   L3:      setb P3.4
045D 120299     281            lcall delay100us
0460 30A202     282            jnb P2.2, L4
0463 C2B4       283            clr P3.4
0465 D2B3       284   L4:      setb P3.3
0467 120299     285            lcall delay100us
046A 30A202     286            jnb P2.2, L5
046D C2B3       287            clr P3.3
046F D2B2       288   L5:      setb P3.2
0471 120299     289            lcall delay100us
0474 30A202     290            jnb P2.2, L6
0477 C2B2       291            clr P3.2
0479 D2B1       292   L6:      setb P3.1
047B 120299     293            lcall delay100us
047E 30A205     294            jnb P2.2, L7
0481 C2B1       295            clr P3.1
0483 120299     296            lcall delay100us
0486 D2B0       297   L7: setb P3.0
0488 120299     298            lcall delay100us
048B 30A202     299            jnb P2.2, L8
048E C2B0       300            clr P3.0
0490 85B0F8     301   L8:      mov LEDG, P3
0493 AEB0       302            mov R6, P3
0495 22         303            ret
0496            304   
0496            305   CheckInputs:
0496 E4         306            clr a
0497 20E806     307            jb SWA.0,SW0T
049A            308   SW0F:
049A EE         309            mov a, R6
049B 1202F3     310            lcall WriteGreen
049E 8004       311            sjmp Cont
04A0            312   SW0T:
04A0 EF         313            mov a, R7
04A1 12033D     314            lcall WriteRed
04A4            315   Cont:
04A4 1203CA     316            lcall bin2bcd8
04A7 1202A2     317            lcall DisplayBin
04AA            318   ;        lcall VoltageVal
04AA 22         319            ret
04AB            320   
04AB            321   myprogram: 
04AB 75817F     322            mov SP, #7FH ; Set the stack pointer 
04AE 75E800     323            mov LEDRA, #0 ; Turn off all LEDs 
04B1 759500     324            mov LEDRB, #0 
04B4 759E00     325            mov LEDRC, #0 
04B7 75F800     326            mov LEDG, #0 
04BA 759DFF     327            mov P3MOD, #11111111B ; Configure P3.0 to P3.7 as outputs 
04BD 759C00     328            mov P2MOD, #00000000B
04C0            329    
04C0 D2DB       330            setb LCD_ON
04C2 C2D9       331       clr LCD_EN                                                           ;Default state of enable must be zero
04C4 120399     332       lcall Wait40us
04C7            333       
04C7 75DAFF     334       mov LCD_MOD, #0xff                                           ;Use LCD_DATA as output port
04CA C2D8       335       clr LCD_RW                                                           ;Only writing to the LCD in this code.
04CC            336            
04CC 740C       337            mov a, #0ch                                                     ;Display on command
04CE 1203A4     338            lcall LCD_command
04D1 7438       339            mov a, #38H                                                     ;8-bits interface, 2 lines, 5x7 characters
04D3 1203A4     340            lcall LCD_command
04D6            341     
04D6            342   Loop: 
04D6 1203DA     343    lcall SuccessiveApproximation 
04D9 120435     344    lcall SuccessiveApproximation2
04DC 120299     345    lcall delay100us
04DF 120496     346    lcall CheckInputs
04E2 80F2       347    sjmp Loop 
04E4            348    EN
