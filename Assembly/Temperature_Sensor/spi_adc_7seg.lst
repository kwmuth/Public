                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              2   
0000              3   org 0000H
0000 02034B       4      ljmp MyProgram
0003              5   
0003              6   MISO   EQU  P0.0 
0003              7   MOSI   EQU  P0.1 
0003              8   SCLK   EQU  P0.2
0003              9   CE_ADC EQU  P0.3
0003             10   
0003             11   FREQ   EQU 33333333
0003             12   BAUD   EQU 115200
0003             13   T2LOAD EQU 65536-(FREQ/(32*BAUD))
0003             14   
0003             15   
0030             16   DSEG at 30H
0030             17   
0030             18   x:               ds 2
0032             19   y:               ds 2
0034             20   bcd:             ds 3
0037             21   
0000             22   BSEG
0000             23   
0000             24   mf:     dbit 1
0001             25   
0003             26   CSEG
0003             27   
                 -1   $include(math16.asm)
                428   $LIST
01DD             29   
01DD             30   ; Look-up tables
01DD             31   myLUT:
01DD C0F9A4B0    32       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H        ; 0 TO 4
     99
01E2 9282F880    33       DB 092H, 082H, 0F8H, 080H, 090H        ; 4 TO 9
     90
01E7             34       
01E7             35   myASCII:
01E7 30313233    36            DB 30H, 31H, 32H, 33H, 34H                      ; 0 TO 4
     34
01EC 35363738    37            DB 35H, 36H, 37H, 38H, 39H                      ; 4 TO 9
     39
01F1 8883C6A1    38            DB 088H, 083H, 0C6H, 0A1H, 086H, 0FFH   ; A TO F
     86FF
01F7             39           
01F7             40   
01F7             41   SendString:
01F7 9001E7      42            mov dptr, #myASCII
01FA             43            ; Display Digit 1 ( Backwards because bits are recieved least to most significant )
01FA E534        44       mov A, bcd+0
01FC C4          45       swap a
01FD 540F        46       anl a, #0fh
01FF 93          47       movc A, @A+dptr
0200 120335      48       lcall putchar
0203             49            ; Display Digit 0
0203 E534        50       mov A, bcd+0
0205 540F        51       anl a, #0fh
0207 93          52       movc A, @A+dptr
0208 120335      53       lcall putchar
020B 740D        54       mov a, #'\r'
020D 120335      55       lcall putchar
0210 740A        56       mov a, #'\n'
0212 120335      57       lcall putchar
0215 22          58       ret
0216             59   
0216             60   Display:
0216 9001DD      61            mov dptr, #myLUT
0219             62            ; Display Digit 0
0219 E534        63       mov A, bcd+0
021B 540F        64       anl a, #0fh
021D 93          65       movc A, @A+dptr
021E F591        66       mov HEX0, A
0220             67            ; Display Digit 1
0220 E534        68       mov A, bcd+0
0222 C4          69       swap a
0223 540F        70       anl a, #0fh
0225 93          71       movc A, @A+dptr
0226 F592        72       mov HEX1, A
0228 22          73       ret
0229             74   
0229             75   Wait1Sec: 
0229 7AB4        76            mov R2, #180 
022B 79FA        77   L3: mov R1, #250
022D 78FA        78   L2: mov R0, #250
022F D8FE        79   L1: djnz R0, L1
0231 D9FA        80            djnz R1, L2
0233 DAF6        81            djnz R2, L3
0235 22          82       ret
0236             83   
0236             84   INIT_SPI:
0236 439A06      85       orl P0MOD, #00000110b ; Set SCLK, MOSI as outputs
0239 539AFE      86       anl P0MOD, #11111110b ; Set MISO as input
023C C282        87       clr SCLK              ; For mode (0,0) SCLK is zero
023E 22          88            ret
023F             89   
023F             90   InitSerialPort:
023F C2CA        91            clr TR2 ; Disable timer 2
0241 75C830      92            mov T2CON, #30H ; RCLK=1, TCLK=1 
0244 75CBFF      93            mov RCAP2H, #high(T2LOAD)  
0247 75CAF7      94            mov RCAP2L, #low(T2LOAD)
024A D2CA        95            setb TR2 ; Enable timer 2
024C 759852      96            mov SCON, #52H
024F 22          97            ret
0250             98            
0250             99   DO_SPI_G:
0250 C0E0       100            push acc
0252 7900       101       mov R1, #0            ; Received byte stored in R1
0254 7A08       102       mov R2, #8            ; Loop counter (8-bits)
0256            103   DO_SPI_G_LOOP:
0256 E8         104       mov a, R0             ; Byte to write is in R0
0257 33         105       rlc a                 ; Carry flag has bit to write
0258 F8         106       mov R0, a
0259 9281       107       mov MOSI, c
025B D282       108       setb SCLK             ; Transmit
025D A280       109       mov c, MISO           ; Read received bit
025F E9         110       mov a, R1             ; Save received bit in R1
0260 33         111       rlc a
0261 F9         112       mov R1, a
0262 C282       113       clr SCLK
0264 DAF0       114       djnz R2, DO_SPI_G_LOOP
0266 D0E0       115       pop acc
0268 22         116       ret
0269            117   
0269            118   LCD_command:
0269 F5D9       119           mov LCD_DATA, A
026B C2DA       120           clr LCD_RS
026D 00         121           nop
026E 00         122           nop
026F D2D9       123           setb LCD_EN        ;Enable pulse should be at least 230 ns
0271 00         124           nop
0272 00         125           nop
0273 00         126           nop
0274 00         127           nop
0275 00         128           nop
0276 00         129           nop
0277 C2D9       130           clr LCD_EN
0279 020307     131           ljmp Wait40us
027C            132   
027C            133   LCD_put:
027C F5D9       134           mov LCD_DATA, A
027E D2DA       135           setb LCD_RS
0280 00         136           nop
0281 00         137           nop
0282 D2D9       138           setb LCD_EN        ;Enable pulse should be at least 230 ns
0284 00         139           nop
0285 00         140           nop
0286 00         141           nop
0287 00         142           nop
0288 00         143           nop
0289 00         144           nop
028A C2D9       145           clr LCD_EN
028C 020307     146           ljmp Wait40us
028F            147   
028F            148   ClearScreen:                ;Clears screen
028F 7401       149           mov a, #01H 
0291 120269     150           lcall LCD_command        
0294 7928       151           mov R1, #40
0296 12029A     152           lcall Clr_loop
0299 22         153           ret
029A            154   
029A            155   Clr_loop:
029A 120307     156           lcall Wait40us
029D D9FB       157           djnz R1, Clr_loop
029F 22         158           ret        
02A0            159   
02A0            160   WriteTemp:
02A0 12028F     161                    lcall ClearScreen
02A3 7480       162                    mov a, #80H
02A5 120269     163           lcall LCD_command
02A8 7454       164           mov a, #'T'
02AA 12027C     165           lcall LCD_put
02AD 7445       166           mov a, #'E'
02AF 12027C     167           lcall LCD_put
02B2 744D       168           mov a, #'M'
02B4 12027C     169           lcall LCD_put
02B7 7450       170           mov a, #'P'
02B9 12027C     171           lcall LCD_put
02BC 7445       172           mov a, #'E'
02BE 12027C     173           lcall LCD_put
02C1 7452       174           mov a, #'R'
02C3 12027C     175           lcall LCD_put
02C6 7441       176           mov a, #'A'
02C8 12027C     177           lcall LCD_put
02CB 7454       178           mov a, #'T'
02CD 12027C     179           lcall LCD_put
02D0 7455       180           mov a, #'U'
02D2 12027C     181           lcall LCD_put
02D5 7452       182           mov a, #'R'
02D7 12027C     183           lcall LCD_put
02DA 7445       184           mov a, #'E'
02DC 12027C     185           lcall LCD_put
02DF 743A       186           mov a, #':'
02E1 12027C     187           lcall LCD_put
02E4 7420       188           mov a, #' '
02E6 12027C     189           lcall LCD_put
02E9 22         190           ret
02EA            191           
02EA            192   DisplayLCD:
02EA 1202A0     193       lcall WriteTemp
02ED 9001E7     194       mov dptr, #myASCII
02F0            195       ; Display Digit 0
02F0 E534       196       mov A, bcd+0
02F2 C4         197       swap a
02F3 540F       198       anl a, #0fh
02F5 93         199       movc A, @A+dptr
02F6 12027C     200       lcall LCD_put
02F9            201       ; Display Digit 1
02F9 E534       202       mov A, bcd+0
02FB 540F       203       anl a, #0fh
02FD 93         204       movc A, @A+dptr
02FE 12027C     205       lcall LCD_put
0301            206       ; Display Units
0301 7443       207       mov a, #'C'
0303 12027C     208       lcall LCD_put
0306 22         209       ret
0307            210   
0307            211   Wait40us:
0307 7895       212       mov R0, #149
0309            213   X1: 
0309 00         214       nop
030A 00         215       nop
030B 00         216       nop
030C 00         217       nop
030D 00         218       nop
030E 00         219       nop
030F D8F8       220       djnz R0, X1        ;9 machine cycles-> 9*30ns*149=40us
0311 22         221       ret
0312            222   
0312            223   ; Channel to read passed in register b
0312            224   Read_ADC_Channel:
0312 75F000     225            mov b, #0
0315 C283       226            clr CE_ADC
0317 7801       227            mov R0, #00000001B ; Start bit:1
0319 120250     228            lcall DO_SPI_G
031C            229            
031C E5F0       230            mov a, b
031E C4         231            swap a
031F 54F0       232            anl a, #0F0H
0321 D2E7       233            setb acc.7 ; Single mode (bit 7).
0323            234            
0323 F8         235            mov R0, a ;  Select channel
0324 120250     236            lcall DO_SPI_G
0327 E9         237            mov a, R1          ; R1 contains bits 8 and 9
0328 5403       238            anl a, #03H
032A FF         239            mov R7, a
032B            240            
032B 7855       241            mov R0, #55H ; It doesn't matter what we transmit...
032D 120250     242            lcall DO_SPI_G
0330 E9         243            mov a, R1    ; R1 contains bits 0 to 7
0331 FE         244            mov R6, a
0332 D283       245            setb CE_ADC
0334 22         246            ret
0335            247   
0335            248   putchar:
0335 3099FD     249       jnb TI, putchar
0338 C299       250       clr TI
033A F599       251       mov SBUF, a
033C 22         252       ret
033D            253            
033D            254   ConvertVoltage:
033D 8F31       255            mov x+1, R7
033F 8E30       256            mov x+0, R6
0341            257            
0341            258            ; The temperature can be calculated as (ADC*500/1024)-273 (may overflow 16 bit operations)
0341            259            ; or (ADC*250/512)-273 (may overflow 16 bit operations)
0341            260            ; or (ADC*125/256)-273 (may overflow 16 bit operations)
0341            261            ; or (ADC*62/256)+(ADC*63/256)-273 (Does not overflow 16 bit operations!)
0341            262            
0341            263            ;Load_y(62)
0341            264            ;lcall mul16
0341            265            ;mov R4, x+1
0341            266   
0341            267            ;mov x+1, R7
0341            268            ;mov x+0, R6
0341            269   
0341            270            ;Load_y(63)
0341            271            ;lcall mul16
0341            272            ;mov R5, x+1
0341            273            
0341            274            ;mov x+0, R4
0341            275            ;mov x+1, #0
0341            276            ;mov y+0, R5
0341            277            ;mov y+1, #0
0341            278            ;lcall add16
0341            279            
0341            280            ;Load_y(273)
0341            281            ;lcall sub16
0341            282            
0341 120003     283            lcall hex2bcd
0344 1201F7     284            lcall SendString
0347 120216     285            lcall Display 
034A 22         286            ret
034B            287   
034B            288   MyProgram:
034B 75817F     289            mov sp, #07FH
034E E4         290            clr a
034F F5F8       291            mov LEDG,  a
0351 F5E8       292            mov LEDRA, a
0353 F595       293            mov LEDRB, a
0355 F59E       294            mov LEDRC, a
0357 439A38     295            orl P0MOD, #00111000b ; make all CEs outputs    
035A D283       296            setb CE_ADC
035C 120236     297            lcall INIT_SPI
035F 12023F     298            lcall InitSerialPort
0362            299            
0362 D2DB       300            setb LCD_ON
0364 C2D9       301            clr LCD_EN                ;Default state of enable must be zero
0366 120307     302            lcall Wait40us
0369 75DAFF     303            mov LCD_MOD, #0xff        ;Use LCD_DATA as output port
036C C2D8       304            clr LCD_RW                        ;Only writing to the LCD in this code.
036E 740C       305            mov a, #0ch                        ;Display on command
0370 120269     306            lcall LCD_command
0373 7438       307            mov a, #38H                        ;8-bits interface, 2 lines, 5x7 characters
0375 120269     308            lcall LCD_command
0378            309                    
0378            310   Forever:
0378 120312     311            lcall Read_ADC_Channel  
037B 12033D     312            lcall ConvertVoltage
037E 1202EA     313            lcall DisplayLCD
0381 120229     314            lcall Wait1Sec
0384 80F2       315            sjmp Forever
0386            316   EN
