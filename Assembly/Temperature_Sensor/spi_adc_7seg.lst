                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              2   
0000              3   org 0000H
0000 0203BF       4      ljmp MyProgram
0003              5   
0003              6   MISO   EQU  P0.0 
0003              7   MOSI   EQU  P0.1 
0003              8   SCLK   EQU  P0.2
0003              9   CE_ADC EQU  P0.3
0003             10   
0003             11   FREQ   EQU 33333333
0003             12   BAUD   EQU 115200
0003             13   T2LOAD EQU 65536-(FREQ/(32*BAUD))
0003             14   
0003             15   
0030             16   DSEG at 30H
0030             17   
0030             18   x:               ds 2
0032             19   y:               ds 2
0034             20   bcd:             ds 3
0037             21   temperature1: ds 1
0038             22   
0000             23   BSEG
0000             24   
0000             25   mf:     dbit 1
0001             26   
0003             27   CSEG
0003             28   
                 -1   $include(math16.asm)
                428   $LIST
01DD             30   
01DD             31   ; Look-up tables
01DD             32   myLUT:
01DD C0F9A4B0    33       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H        ; 0 TO 4
     99
01E2 9282F880    34       DB 092H, 082H, 0F8H, 080H, 090H        ; 4 TO 9
     90
01E7             35       
01E7             36   myASCII:
01E7 30313233    37            DB 30H, 31H, 32H, 33H, 34H                      ; 0 TO 4
     34
01EC 35363738    38            DB 35H, 36H, 37H, 38H, 39H                      ; 4 TO 9
     39
01F1 8883C6A1    39            DB 088H, 083H, 0C6H, 0A1H, 086H, 0FFH   ; A TO F
     86FF
01F7             40           
01F7             41   
01F7             42   SendString:
01F7 9001E7      43            mov dptr, #myASCII
01FA             44            ; Display Digit 1 ( Backwards because bits are recieved least to most significant )
01FA E534        45       mov A, bcd+0
01FC C4          46       swap a
01FD 540F        47       anl a, #0fh
01FF 93          48       movc A, @A+dptr
0200 120376      49       lcall putchar
0203             50            ; Display Digit 0
0203 E534        51       mov A, bcd+0
0205 540F        52       anl a, #0fh
0207 93          53       movc A, @A+dptr
0208 120376      54       lcall putchar
020B 740D        55       mov a, #'\r'
020D 120376      56       lcall putchar
0210 740A        57       mov a, #'\n'
0212 120376      58       lcall putchar
0215 22          59       ret
0216             60   
0216             61   Wait1Sec: 
0216 7AB4        62            mov R2, #180 
0218 79FA        63   L3: mov R1, #250
021A 78FA        64   L2: mov R0, #250
021C D8FE        65   L1: djnz R0, L1
021E D9FA        66            djnz R1, L2
0220 DAF6        67            djnz R2, L3
0222 22          68       ret
0223             69   
0223             70   INIT_SPI:
0223 439A06      71       orl P0MOD, #00000110b ; Set SCLK, MOSI as outputs
0226 539AFE      72       anl P0MOD, #11111110b ; Set MISO as input
0229 C282        73       clr SCLK              ; For mode (0,0) SCLK is zero
022B 22          74            ret
022C             75   
022C             76   InitSerialPort:
022C C2CA        77            clr TR2 ; Disable timer 2
022E 75C830      78            mov T2CON, #30H ; RCLK=1, TCLK=1 
0231 75CBFF      79            mov RCAP2H, #high(T2LOAD)  
0234 75CAF7      80            mov RCAP2L, #low(T2LOAD)
0237 D2CA        81            setb TR2 ; Enable timer 2
0239 759852      82            mov SCON, #52H
023C 22          83            ret
023D             84            
023D             85   DO_SPI_G:
023D C0E0        86            push acc
023F 7900        87       mov R1, #0            ; Received byte stored in R1
0241 7A08        88       mov R2, #8            ; Loop counter (8-bits)
0243             89   DO_SPI_G_LOOP:
0243 E8          90       mov a, R0             ; Byte to write is in R0
0244 33          91       rlc a                 ; Carry flag has bit to write
0245 F8          92       mov R0, a
0246 9281        93       mov MOSI, c
0248 D282        94       setb SCLK             ; Transmit
024A A280        95       mov c, MISO           ; Read received bit
024C E9          96       mov a, R1             ; Save received bit in R1
024D 33          97       rlc a
024E F9          98       mov R1, a
024F C282        99       clr SCLK
0251 DAF0       100       djnz R2, DO_SPI_G_LOOP
0253 D0E0       101       pop acc
0255 22         102       ret
0256            103   
0256            104   LCD_command:
0256 F5D9       105           mov LCD_DATA, A
0258 C2DA       106           clr LCD_RS
025A 00         107           nop
025B 00         108           nop
025C D2D9       109           setb LCD_EN        ;Enable pulse should be at least 230 ns
025E 00         110           nop
025F 00         111           nop
0260 00         112           nop
0261 00         113           nop
0262 00         114           nop
0263 00         115           nop
0264 C2D9       116           clr LCD_EN
0266 020348     117           ljmp Wait40us
0269            118   
0269            119   LCD_put:
0269 F5D9       120           mov LCD_DATA, A
026B D2DA       121           setb LCD_RS
026D 00         122           nop
026E 00         123           nop
026F D2D9       124           setb LCD_EN        ;Enable pulse should be at least 230 ns
0271 00         125           nop
0272 00         126           nop
0273 00         127           nop
0274 00         128           nop
0275 00         129           nop
0276 00         130           nop
0277 C2D9       131           clr LCD_EN
0279 020348     132           ljmp Wait40us
027C            133   
027C            134   ClearScreen:                ;Clears screen
027C 7401       135           mov a, #01H 
027E 120256     136           lcall LCD_command        
0281 7928       137           mov R1, #40
0283 120287     138           lcall Clr_loop
0286 22         139           ret
0287            140   
0287            141   Clr_loop:
0287 120348     142           lcall Wait40us
028A D9FB       143           djnz R1, Clr_loop
028C 22         144           ret        
028D            145   
028D            146   WriteTemp:
028D 12027C     147                    lcall ClearScreen
0290 7480       148                    mov a, #80H
0292 120256     149           lcall LCD_command
0295 7454       150           mov a, #'T'
0297 120269     151           lcall LCD_put
029A 7445       152           mov a, #'E'
029C 120269     153           lcall LCD_put
029F 744D       154           mov a, #'M'
02A1 120269     155           lcall LCD_put
02A4 7450       156           mov a, #'P'
02A6 120269     157           lcall LCD_put
02A9 7445       158           mov a, #'E'
02AB 120269     159           lcall LCD_put
02AE 7452       160           mov a, #'R'
02B0 120269     161           lcall LCD_put
02B3 7441       162           mov a, #'A'
02B5 120269     163           lcall LCD_put
02B8 7454       164           mov a, #'T'
02BA 120269     165           lcall LCD_put
02BD 7455       166           mov a, #'U'
02BF 120269     167           lcall LCD_put
02C2 7452       168           mov a, #'R'
02C4 120269     169           lcall LCD_put
02C7 7445       170           mov a, #'E'
02C9 120269     171           lcall LCD_put
02CC 743A       172           mov a, #':'
02CE 120269     173           lcall LCD_put
02D1 7420       174           mov a, #' '
02D3 120269     175           lcall LCD_put
02D6 22         176           ret
02D7            177           
02D7            178   CheckDesiredTemp:  
02D7 1202ED     179              lcall ClearDisplay      
02DA C3         180         clr c
02DB E534       181         mov a, bcd+0
02DD            182         ;add a, #1
02DD 8537F0     183         mov b, temperature1+0
02E0 95F0       184         subb a, b
02E2 4005       185         jc M10
02E4 1202FE     186         lcall Heat_off
02E7 8003       187         sjmp M9
02E9 1202F7     188   M10:  lcall Heat_on
02EC 22         189   M9:        ret
02ED            190               
02ED            191   ClearDisplay: 
02ED 7591FF     192            mov HEX0, #0FFH
02F0 7592FF     193            mov HEX1, #0FFH
02F3 7593FF     194            mov HEX2, #0FFH
02F6 22         195            ret
02F7            196            
02F7            197   Heat_on:
02F7 7592C0     198            mov HEX1, #0C0H
02FA 75912B     199            mov HEX0, #2BH
02FD 22         200            ret
02FE            201   
02FE            202   Heat_off:
02FE 7593C0     203            mov HEX2, #0C0H
0301 75920E     204            mov HEX1, #0EH
0304 75910E     205            mov HEX0, #0EH
0307 22         206            ret
0308            207            
0308            208   SetTemp:
0308 20F90A     209            jb KEY.1, M3
030B 30F9FD     210       jnb KEY.1, $                                                        ;if KEY.1 is pressed, increment seconds
030E E537       211       mov a, temperature1
0310 2401       212       add a, #1
0312 D4         213       da a
0313 F537       214       mov temperature1, a
0315            215       ;cjne A, #100H, M3
0315            216       ;mov temperature1, #0
0315 9001DD     217   M3: mov dptr, #myLUT
0318            218            ; Display Digit 0
0318 E537       219       mov A, temperature1
031A 540F       220       anl a, #0fh
031C 93         221       movc A, @A+dptr
031D F596       222       mov HEX6, A
031F            223            ; Display Digit 1
031F E537       224       mov A, temperature1
0321 C4         225       swap a
0322 540F       226       anl a, #0fh
0324 93         227       movc A, @A+dptr
0325 F597       228       mov HEX7, A
0327 20E8DE     229       jb SWA.0, SetTemp
032A 22         230       ret
032B            231       
032B            232   DisplayLCD:
032B 12028D     233       lcall WriteTemp
032E 9001E7     234       mov dptr, #myASCII
0331            235       ; Display Digit 0
0331 E534       236       mov A, bcd+0
0333 C4         237       swap a
0334 540F       238       anl a, #0fh
0336 93         239       movc A, @A+dptr
0337 120269     240       lcall LCD_put
033A            241       ; Display Digit 1
033A E534       242       mov A, bcd+0
033C 540F       243       anl a, #0fh
033E 93         244       movc A, @A+dptr
033F 120269     245       lcall LCD_put
0342            246       ; Display Units
0342 7443       247       mov a, #'C'
0344 120269     248       lcall LCD_put
0347 22         249       ret
0348            250   
0348            251   Wait40us:
0348 7895       252       mov R0, #149
034A            253   X1: 
034A 00         254       nop
034B 00         255       nop
034C 00         256       nop
034D 00         257       nop
034E 00         258       nop
034F 00         259       nop
0350 D8F8       260       djnz R0, X1        ;9 machine cycles-> 9*30ns*149=40us
0352 22         261       ret
0353            262   
0353            263   ; Channel to read passed in register b
0353            264   Read_ADC_Channel:
0353 75F000     265            mov b, #0
0356 C283       266            clr CE_ADC
0358 7801       267            mov R0, #00000001B ; Start bit:1
035A 12023D     268            lcall DO_SPI_G
035D            269            
035D E5F0       270            mov a, b
035F C4         271            swap a
0360 54F0       272            anl a, #0F0H
0362 D2E7       273            setb acc.7 ; Single mode (bit 7).
0364            274            
0364 F8         275            mov R0, a ;  Select channel
0365 12023D     276            lcall DO_SPI_G
0368 E9         277            mov a, R1          ; R1 contains bits 8 and 9
0369 5403       278            anl a, #03H
036B FF         279            mov R7, a
036C            280            
036C 7855       281            mov R0, #55H ; It doesn't matter what we transmit...
036E 12023D     282            lcall DO_SPI_G
0371 E9         283            mov a, R1    ; R1 contains bits 0 to 7
0372 FE         284            mov R6, a
0373 D283       285            setb CE_ADC
0375 22         286            ret
0376            287   
0376            288   putchar:
0376 3099FD     289       jnb TI, putchar
0379 C299       290       clr TI
037B F599       291       mov SBUF, a
037D 22         292       ret
037E            293            
037E            294   ConvertVoltage:
037E 8F31       295            mov x+1, R7
0380 8E30       296            mov x+0, R6
0382            297            
0382            298            ; The temperature can be calculated as (ADC*500/1024)-273 (may overflow 16 bit operations)
0382            299            ; or (ADC*250/512)-273 (may overflow 16 bit operations)
0382            300            ; or (ADC*125/256)-273 (may overflow 16 bit operations)
0382            301            ; or (ADC*62/256)+(ADC*63/256)-273 (Does not overflow 16 bit operations!)
0382            302            
0382 75323E     303            mov y+0, #low (62) 
0385 753300     303            mov y+1, #high(62) 
0388 12010C     304            lcall mul16
038B AC31       305            mov R4, x+1
038D            306            
038D 8F31       307            mov x+1, R7
038F 8E30       308            mov x+0, R6
0391 E531       309            mov a, x+1
0393 20E729     310            jb acc.7, ChangeNegative 
0396 E4         311            clr a
0397            312            
0397 75323F     313            mov y+0, #low (63) 
039A 753300     313            mov y+1, #high(63) 
039D 12010C     314            lcall mul16
03A0 AD31       315            mov R5, x+1
03A2            316            
03A2 8C30       317            mov x+0, R4
03A4 753100     318            mov x+1, #0
03A7 8D32       319            mov y+0, R5
03A9 753300     320            mov y+1, #0
03AC 12008B     321            lcall add16
03AF            322            
03AF 753211     323            mov y+0, #low (273) 
03B2 753301     323            mov y+1, #high(273) 
03B5 1200A0     324            lcall sub16
03B8            325            
03B8 120003     326            lcall hex2bcd
03BB 1201F7     327            lcall SendString
03BE            328            ;lcall Display 
03BE 22         329            ret
03BF            330   
03BF            331   ChangeNegative:
03BF            332            
03BF            333   
03BF            334   MyProgram:
03BF 75817F     335            mov sp, #07FH
03C2 E4         336            clr a
03C3 F5F8       337            mov LEDG,  a
03C5 F5E8       338            mov LEDRA, a
03C7 F595       339            mov LEDRB, a
03C9 F59E       340            mov LEDRC, a
03CB 439A38     341            orl P0MOD, #00111000b ; make all CEs outputs    
03CE D283       342            setb CE_ADC
03D0 120223     343            lcall INIT_SPI
03D3 12022C     344            lcall InitSerialPort
03D6            345            
03D6 D2DB       346            setb LCD_ON
03D8 C2D9       347            clr LCD_EN                ;Default state of enable must be zero
03DA 120348     348            lcall Wait40us
03DD 75DAFF     349            mov LCD_MOD, #0xff        ;Use LCD_DATA as output port
03E0 C2D8       350            clr LCD_RW                        ;Only writing to the LCD in this code.
03E2 740C       351            mov a, #0ch                        ;Display on command
03E4 120256     352            lcall LCD_command
03E7 7438       353            mov a, #38H                        ;8-bits interface, 2 lines, 5x7 characters
03E9 120256     354            lcall LCD_command
03EC            355                    
03EC            356   Forever:
03EC 30E803     357            jnb SWA.0, M7
03EF 120308     358            lcall setTemp
03F2 1202D7     359   M7:      lcall CheckDesiredTemp
03F5 120353     360            lcall Read_ADC_Channel  
03F8 12037E     361            lcall ConvertVoltage
03FB 12032B     362            lcall DisplayLCD
03FE 120216     363            lcall Wait1Sec
0401 80E9       364            sjmp Forever
0403            365   EN
